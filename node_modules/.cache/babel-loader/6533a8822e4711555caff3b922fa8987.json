{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\nilss\\\\Desktop\\\\Projects\\\\galerie-sens\\\\src\\\\components\\\\scene.js\";\nimport React, { useEffect } from \"react\";\nimport Matter from \"matter-js\";\n\nclass Scene extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      height: 0,\n      width: 0\n    };\n  }\n  /**\r\n   * Calculate & Update state of new dimensions\r\n   */\n\n\n  updateDimensions() {\n    if (window.innerWidth < 500) {\n      this.setState({\n        width: 450,\n        height: 102\n      });\n    } else {\n      let update_width = window.innerWidth;\n      let update_height = window.innerHeight;\n      this.setState({\n        width: update_width,\n        height: update_height\n      });\n    }\n  }\n  /**\r\n   * Add event listener\r\n   */\n\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    var Engine = Matter.Engine,\n        Render = Matter.Render,\n        World = Matter.World,\n        Bodies = Matter.Bodies,\n        Mouse = Matter.Mouse,\n        MouseConstraint = Matter.MouseConstraint;\n    var engine = Engine.create({// positionIterations: 20\n    }); // TODO: resizing!!!\n\n    var render = Render.create({\n      element: this.refs.scene,\n      engine: engine,\n      options: {\n        width: this.state.width,\n        height: this.state.height,\n        wireframes: false\n      }\n    });\n    const xPos = width - 25;\n    var rectA = Bodies.rectangle(410, 100, 120, 50, {\n      restitution: 0.5\n    });\n    var rectB = Bodies.rectangle(110, 50, 80, 50, {\n      restitution: 0.5\n    });\n    var rectC = Bodies.rectangle(70, 50, 140, 50, {\n      restitution: 0.5\n    });\n    var rectD = Bodies.rectangle(300, 50, 90, 50, {\n      restitution: 0.5\n    });\n    World.add(engine.world, [// walls\n    Bodies.rectangle(this.state.width / 2, 700, this.state.width, 50, {\n      isStatic: true\n    }), Bodies.rectangle(xPos, 350, 50, 700, {\n      isStatic: true\n    }), Bodies.rectangle(25, 350, 50, 700, {\n      isStatic: true\n    })]);\n    World.add(engine.world, [rectA, rectB, rectC, rectD]); // add mouse control\n\n    var mouse = Mouse.create(render.canvas),\n        mouseConstraint = MouseConstraint.create(engine, {\n      mouse: mouse,\n      constraint: {\n        stiffness: 0.2,\n        render: {\n          visible: false\n        }\n      }\n    });\n    World.add(engine.world, mouseConstraint);\n    Matter.Events.on(mouseConstraint, \"mousedown\", function (event) {\n      World.add(engine.world, Bodies.rectangle(event.mouse.mousedownPosition.x, 50, 120, 50, {\n        restitution: 0.7\n      }));\n    });\n    Engine.run(engine);\n    Render.run(render);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: \"scene\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Scene;","map":{"version":3,"sources":["C:/Users/nilss/Desktop/Projects/galerie-sens/src/components/scene.js"],"names":["React","useEffect","Matter","Scene","Component","constructor","state","height","width","updateDimensions","window","innerWidth","setState","update_width","update_height","innerHeight","componentDidMount","addEventListener","bind","Engine","Render","World","Bodies","Mouse","MouseConstraint","engine","create","render","element","refs","scene","options","wireframes","xPos","rectA","rectangle","restitution","rectB","rectC","rectD","add","world","isStatic","mouse","canvas","mouseConstraint","constraint","stiffness","visible","Events","on","event","mousedownPosition","x","run"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport Matter from \"matter-js\";\r\n\r\nclass Scene extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      height:0,\r\n      width:0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate & Update state of new dimensions\r\n   */\r\n  updateDimensions() {\r\n    if(window.innerWidth < 500) {\r\n      this.setState({ width: 450, height: 102 });\r\n    } else {\r\n      let update_width  = window.innerWidth\r\n      let update_height = window.innerHeight\r\n      this.setState({ width: update_width, height: update_height })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Add event listener\r\n   */\r\n  componentDidMount() {\r\n    \r\n    this.updateDimensions();\r\n    \r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n\r\n    var Engine = Matter.Engine,\r\n        Render = Matter.Render,\r\n        World = Matter.World,\r\n        Bodies = Matter.Bodies,\r\n        Mouse = Matter.Mouse,\r\n        MouseConstraint = Matter.MouseConstraint;\r\n\r\n    var engine = Engine.create({\r\n      // positionIterations: 20\r\n    });\r\n\r\n    // TODO: resizing!!!\r\n\r\n    var render = Render.create({\r\n      element: this.refs.scene,\r\n      engine: engine,\r\n      options: {\r\n        width:  this.state.width,\r\n        height: this.state.height,\r\n        wireframes: false\r\n      }\r\n    });\r\n\r\n    const xPos = width-25\r\n\r\n    var rectA = Bodies.rectangle(410, 100, 120, 50, { restitution: 0.5 });\r\n    var rectB = Bodies.rectangle(110, 50, 80, 50, { restitution: 0.5 });\r\n    var rectC = Bodies.rectangle(70, 50, 140, 50, { restitution: 0.5 });\r\n    var rectD = Bodies.rectangle(300, 50, 90, 50, { restitution: 0.5 });\r\n    World.add(engine.world, [\r\n      // walls\r\n      Bodies.rectangle(this.state.width/2, 700, this.state.width, 50, { isStatic: true }),\r\n      Bodies.rectangle(xPos, 350, 50, 700, { isStatic: true }),\r\n      Bodies.rectangle(25, 350, 50, 700, { isStatic: true })\r\n    ]);\r\n\r\n    World.add(engine.world, [rectA, rectB, rectC, rectD]);\r\n\r\n    // add mouse control\r\n    var mouse = Mouse.create(render.canvas),\r\n      mouseConstraint = MouseConstraint.create(engine, {\r\n        mouse: mouse,\r\n        constraint: {\r\n          stiffness: 0.2,\r\n          render: {\r\n            visible: false\r\n          }\r\n        }\r\n      });\r\n\r\n    World.add(engine.world, mouseConstraint);\r\n\r\n    Matter.Events.on(mouseConstraint, \"mousedown\", function(event) {\r\n      World.add(engine.world, Bodies.rectangle(event.mouse.mousedownPosition.x, 50, 120, 50, { restitution: 0.7 }));\r\n    });\r\n\r\n    Engine.run(engine);\r\n\r\n    Render.run(render);\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    return <div ref=\"scene\" />;\r\n  }\r\n}\r\nexport default Scene;"]},"metadata":{},"sourceType":"module"}