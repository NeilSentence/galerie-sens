{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilss\\\\Desktop\\\\Projects\\\\galerie-sens\\\\src\\\\pages\\\\bilderwand.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ZurWand from './../components/zurwand';\nimport Einzelbild from './../components/einzelbild'; // hier müssen Bilder geladen werden\n// const bilder = []\n// bilder.map(...) erstelle <BildThumb />\n\nconst Bilderwand = props => {\n  _s();\n\n  const [einzelAnsicht, setEinzelAnsicht] = useState(false);\n  const [selectedArt, setSelectedArt] = useState(0); // ### click auf Bild -> setEinzelAnsicht! && set Bildinfos\n\n  const style = {\n    header: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      top: 0,\n      height: 64,\n      position: 'fixed',\n      zIndex: 1\n    },\n    heading: {\n      height: 36,\n      zIndex: 2,\n      background: '#333333',\n      color: 'lightgrey',\n      pointerEvents: 'none',\n      fontSize: '1.5em'\n    },\n    wand: {\n      background: '#2b2b2b',\n      height: '100vh',\n      width: '100%',\n      position: 'fixed',\n      top: 0,\n      left: 0\n    },\n    imagewrapper: {\n      position: 'absolute',\n      top: 0,\n      width: '100vw',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    image: {\n      cursor: 'pointer',\n      display: 'inline',\n      opacity: 0,\n      animationName: 'fadein',\n      animationDuration: '0.4s',\n      animationDelay: '1s',\n      animationTimingFunction: 'ease',\n      animationFillMode: 'forwards',\n      height: '70%',\n      webkitBoxShadow: \"0px 0px 52px 0px rgba(0, 0, 0, 1), \",\n      mozBoxShadow: \"0px 0px 52px 0px rgba(0, 0, 0, 1)\",\n      boxShadow: \"0 0 10px rgba(0,0,0,1),0 0 30px rgba(0,0,0,0.85),0 0 40px rgba(0,0,0,0.45),0 0 50px rgba(0,0,0,0.3),0 0 60px rgba(0,0,0,0.25)\"\n    },\n    bildtitel: {\n      color: 'lightgrey'\n    }\n  }; // clickEvent auf IMG, \n  // dann <p className=\"bild_titel\" style={style.bildtitel}>{props.bilder[0].titel}</p> \n  // unter Einzelbildansicht (EBA)\n\n  const bilder = props.bilder;\n  /*\r\n  \t[i]\r\n  \t\t.titel\r\n  \t\t.beschreibung\r\n  \t\t.preis\r\n  \t\t.tags\r\n  \t\t.groesse.x/.y/.z\r\n  \t\t.gewicht\r\n  \t\t.altSrc // [filename2,filename3]\r\n  \t\t.source\r\n  \t\t.alt#txt\r\n  \t\t.verkauft // true,false\r\n  */\n\n  const diesesKunstwerk = el => {\n    setSelectedArt(el.target.id);\n    setEinzelAnsicht(true);\n  };\n\n  const bilderHTML = bilder.map(bild => {\n    const left = bild.id * 100;\n    const obj = JSON.stringify(style.imagewrapper);\n    const newstyle = JSON.parse(obj);\n    newstyle.left = left + '%';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: bild.id,\n      style: newstyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: bild.id,\n      className: \"wandbild\",\n      style: style.image,\n      alt: bilder[bild.id].altTxt,\n      src: bilder[bild.id].source,\n      onClick: el => {\n        diesesKunstwerk(el);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 53\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn sctn_bilderwand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_header\",\n    style: style.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sctn_heading\",\n    style: style.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, props.titel), /*#__PURE__*/React.createElement(ZurWand, {\n    label: \"Anmerkungen\",\n    wandLaden: () => {\n      console.log(`Wand ${props.titel} wird geladen...`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, \"Anmerkungen der K\\xFCnstlerin\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_wand\",\n    style: style.wand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, bilderHTML)), einzelAnsicht && /*#__PURE__*/React.createElement(Einzelbild, {\n    bildinfos: bilder[selectedArt],\n    schliessen: () => {\n      setEinzelAnsicht(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 22\n    }\n  }));\n};\n\n_s(Bilderwand, \"MzSSjMn0kSVZXmeom/Lj1oESJnk=\");\n\n_c = Bilderwand;\nexport default Bilderwand;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bilderwand\");","map":{"version":3,"sources":["C:/Users/nilss/Desktop/Projects/galerie-sens/src/pages/bilderwand.js"],"names":["React","useState","ZurWand","Einzelbild","Bilderwand","props","einzelAnsicht","setEinzelAnsicht","selectedArt","setSelectedArt","style","header","display","flexDirection","alignItems","justifyContent","top","height","position","zIndex","heading","background","color","pointerEvents","fontSize","wand","width","left","imagewrapper","image","cursor","opacity","animationName","animationDuration","animationDelay","animationTimingFunction","animationFillMode","webkitBoxShadow","mozBoxShadow","boxShadow","bildtitel","bilder","diesesKunstwerk","el","target","id","bilderHTML","map","bild","obj","JSON","stringify","newstyle","parse","altTxt","source","titel","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ZurWand from './../components/zurwand'\r\nimport Einzelbild from './../components/einzelbild'\r\n\r\n// hier müssen Bilder geladen werden\r\n// const bilder = []\r\n// bilder.map(...) erstelle <BildThumb />\r\n\r\n\r\nconst Bilderwand = props => {\r\n\tconst [einzelAnsicht, setEinzelAnsicht] = useState(false)\r\n\tconst [selectedArt, setSelectedArt] = useState(0)\r\n\r\n\t// ### click auf Bild -> setEinzelAnsicht! && set Bildinfos\r\n\r\n\tconst style = {\r\n\t\theader:{\r\n\t\t\tdisplay:'flex',\r\n\t\t\tflexDirection: 'row',\r\n    \t\talignItems: 'center',\r\n    \t\tjustifyContent: 'space-between',\r\n    \t\ttop: 0,\r\n    \t\theight: 64,\r\n    \t\tposition: 'fixed',\r\n    \t\tzIndex: 1\r\n\t\t},\r\n\t\theading: {\r\n\t\t\theight: 36,\r\n\t\t\tzIndex:2,\r\n\t\t\tbackground:'#333333',\r\n\t\t\tcolor:'lightgrey',\r\n\t\t\tpointerEvents: 'none',\r\n\t\t\tfontSize:'1.5em'\r\n\t\t},\r\n\t\twand:{\r\n\t\t\tbackground:'#2b2b2b',\r\n\t\t\theight:'100vh',\r\n\t\t\twidth:'100%',\r\n\t\t\tposition: 'fixed',\r\n\t\t    top: 0,\r\n\t\t    left: 0\r\n\t\t},\r\n\t\timagewrapper:{\r\n\t\t\tposition:'absolute',\r\n\t\t\ttop:0,\r\n\t\t\twidth:'100vw',\r\n\t\t\theight:'100%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t    flexDirection: 'row',\r\n\t\t    alignItems: 'center',\r\n\t\t    justifyContent: 'center'\r\n\t\t},\r\n\t\timage:{\r\n\t\t\tcursor:'pointer',\r\n\t\t\tdisplay:'inline',\r\n\t\t\topacity:0,\r\n\t\t\tanimationName:'fadein',\r\n\t\t\tanimationDuration:'0.4s',\r\n\t\t\tanimationDelay:'1s',\r\n\t\t\tanimationTimingFunction: 'ease',\r\n\t\t\tanimationFillMode: 'forwards',\r\n\t\t\theight:'70%',\r\n\t\t\twebkitBoxShadow: \"0px 0px 52px 0px rgba(0, 0, 0, 1), \",\r\n\t\t\tmozBoxShadow: \"0px 0px 52px 0px rgba(0, 0, 0, 1)\",\r\n\t\t\tboxShadow: \"0 0 10px rgba(0,0,0,1),0 0 30px rgba(0,0,0,0.85),0 0 40px rgba(0,0,0,0.45),0 0 50px rgba(0,0,0,0.3),0 0 60px rgba(0,0,0,0.25)\"\r\n\t\t},\r\n\t\tbildtitel:{\r\n\t\t\tcolor: 'lightgrey'\r\n\t\t}\r\n\t}\r\n\r\n\t// clickEvent auf IMG, \r\n\t// dann <p className=\"bild_titel\" style={style.bildtitel}>{props.bilder[0].titel}</p> \r\n\t// unter Einzelbildansicht (EBA)\r\n\r\n\tconst bilder = props.bilder\r\n\t/*\r\n\t\t[i]\r\n\t\t\t.titel\r\n\t\t\t.beschreibung\r\n\t\t\t.preis\r\n\t\t\t.tags\r\n\t\t\t.groesse.x/.y/.z\r\n\t\t\t.gewicht\r\n\t\t\t.altSrc // [filename2,filename3]\r\n\t\t\t.source\r\n\t\t\t.alt#txt\r\n\t\t\t.verkauft // true,false\r\n\t*/\r\n\r\n\tconst diesesKunstwerk = (el) => {\r\n\t\tsetSelectedArt(el.target.id)\r\n\t\tsetEinzelAnsicht(true)\r\n\t}\r\n\r\n\tconst bilderHTML = bilder.map((bild) => {\r\n\t\tconst left = bild.id*100\r\n\r\n\t\tconst obj = JSON.stringify(style.imagewrapper)\r\n\t\tconst newstyle = JSON.parse(obj)\r\n\t\tnewstyle.left=left+'%'\r\n        return (<div key={bild.id} style={newstyle}><img id={bild.id} className=\"wandbild\" style={style.image} alt={bilder[bild.id].altTxt} src={bilder[bild.id].source} onClick={(el)=>{diesesKunstwerk(el)}}/></div>)\r\n    })\r\n\r\n\treturn (\r\n\t\t<div className=\"sctn sctn_bilderwand\">\r\n\t\t\t<div className=\"sctn_header\" style={style.header}>\r\n\t\t\t\t<h1 className=\"sctn_heading\" style={style.heading}>{props.titel}</h1>\r\n\t\t\t\t<ZurWand label=\"Anmerkungen\" wandLaden={() => {console.log(`Wand ${props.titel} wird geladen...`)}}>Anmerkungen der Künstlerin</ZurWand>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sctn_body\">\r\n\t\t\t\t<div className=\"sctn_wand\" style={style.wand}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{bilderHTML}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{einzelAnsicht && <Einzelbild bildinfos={bilder[selectedArt]} schliessen={()=>{setEinzelAnsicht(false)}} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Bilderwand"]},"metadata":{},"sourceType":"module"}