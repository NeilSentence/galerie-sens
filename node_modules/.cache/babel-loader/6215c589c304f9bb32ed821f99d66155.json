{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilss\\\\Desktop\\\\Projects\\\\galerie-sens\\\\src\\\\components\\\\menudrop.js\";\nimport React from \"react\";\nimport Matter from \"matter-js\";\nimport MenuLink from './menulink';\nimport Dummy from './dummies';\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props); // TODO: eigentlich muss window state ein paar Stufen höher und ge-propt werden.\n\n    this.style = {\n      wrapper: {\n        display: \"block\",\n        top: 50,\n        height: 'calc(100% - 50px)',\n        width: '100vw',\n        position: 'fixed'\n      },\n      blocks: {},\n      menulink: {// TODO: hier kann man schön conditional logic als breakpoints fahren, abhängig von this.state.width /.height\n      }\n    };\n\n    this.update = () => {\n      this.setState({\n        height: window.innerHeight,\n        width: window.innerWidth\n      });\n    };\n\n    this.closeMenu = () => {\n      this.props.menudrop({\n        menuDrop: false\n      });\n    };\n\n    this.state = {\n      height: window.innerHeight,\n      width: window.innerWidth\n    };\n    window.addEventListener(\"resize\", this.update);\n  }\n\n  componentDidMount() {\n    const runCode = () => {\n      const Body = Matter.Body;\n      const fallables = document.querySelectorAll(\".fallable\");\n      console.dir(fallables);\n      const engine = Matter.Engine.create();\n      const stack1 = Matter.Composites.stack( // xx, yy, columns, rows, columnGap, rowGap, cb\n      0, 0, fallables.length, 1, 0, 0, (xx, yy, i) => {\n        const randomX = Math.floor(Math.random() * (this.state.width - 200) + 1);\n        const {\n          y,\n          width,\n          height\n        } = fallables[i].getBoundingClientRect();\n        const box = Matter.Bodies.rectangle(randomX, -this.state.height + 200, width, height, {//isStatic: i === 0 || i + 1 === fallables.length\n        });\n\n        const randomAngularV = () => Math.random() > 0.5 ? 1 : -1; //Body.setAngularVelocity( box, Math.PI/1000*randomAngularV());\n\n\n        return box;\n      });\n      const wallThickness = 100;\n      const wallHeight = this.state.height * 2;\n      const wallY = 0;\n      const floor = Matter.Bodies.rectangle(this.state.width / 2, this.state.height - 50, this.state.width, 100);\n      const wallR = Matter.Bodies.rectangle(this.state.width + 50, wallY, wallThickness, wallHeight);\n      const wallL = Matter.Bodies.rectangle(-50, wallY, wallThickness, wallHeight);\n      const ceil = Matter.Bodies.rectangle(this.state.width / 2, -this.state.height - 50, this.state.width, 100);\n      Body.setStatic(floor, true);\n      Body.setStatic(wallR, true);\n      Body.setStatic(wallL, true);\n      Body.setStatic(ceil, true);\n      const mouseConstraint = Matter.MouseConstraint.create(engine, {\n        element: document.querySelector(\"#mjs-wrapper\")\n      });\n      Matter.World.add(engine.world, [stack1, mouseConstraint, floor, wallL, wallR, ceil]);\n      fallables.forEach(e => {\n        e.style.position = \"absolute\";\n        e.addEventListener(\"click\", e => {// hier soll dann etwas passieren. Es gibt aber schon den \"navigate to href\" Event Listener im Menulink Component\n          // man könnte noch irgendeinen Effekt der bei allen fallables passiert hier anbringen.\n        });\n      });\n\n      (function update() {\n        requestAnimationFrame(update);\n        stack1.bodies.forEach((block, i) => {\n          const thisFallable = fallables[i];\n          const {\n            x,\n            y\n          } = block.vertices[0];\n          thisFallable.style.top = `${y}px`;\n          thisFallable.style.left = `${x}px`;\n          thisFallable.style.transform = `translate(-50%, -50%) \n\t\t\t                             rotate(${block.angle}rad) \n\t\t\t                             translate(50%, 50%)`;\n        });\n        Matter.Engine.update(engine);\n      })();\n    };\n\n    runCode();\n    this.update();\n  }\n\n  render() {\n    const Dummies = [];\n\n    for (let i = 0; i < this.props.numberOfDummies; i++) {\n      Dummies.push( /*#__PURE__*/React.createElement(Dummy, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 20\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mjs-wrapper\",\n      style: this.style.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 4\n      }\n    }, this.props.elements, Dummies);\n  }\n\n}\n\nexport default Scene;","map":{"version":3,"sources":["C:/Users/nilss/Desktop/Projects/galerie-sens/src/components/menudrop.js"],"names":["React","Matter","MenuLink","Dummy","Scene","Component","constructor","props","style","wrapper","display","top","height","width","position","blocks","menulink","update","setState","window","innerHeight","innerWidth","closeMenu","menudrop","menuDrop","state","addEventListener","componentDidMount","runCode","Body","fallables","document","querySelectorAll","console","dir","engine","Engine","create","stack1","Composites","stack","length","xx","yy","i","randomX","Math","floor","random","y","getBoundingClientRect","box","Bodies","rectangle","randomAngularV","wallThickness","wallHeight","wallY","wallR","wallL","ceil","setStatic","mouseConstraint","MouseConstraint","element","querySelector","World","add","world","forEach","e","requestAnimationFrame","bodies","block","thisFallable","x","vertices","left","transform","angle","render","Dummies","numberOfDummies","push","elements"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport Matter from \"matter-js\"\r\nimport MenuLink from './menulink'\r\nimport Dummy from './dummies'\r\n\r\nclass Scene extends React.Component {\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\t// TODO: eigentlich muss window state ein paar Stufen höher und ge-propt werden.\r\n\t\tthis.state = {\r\n\t      \theight: window.innerHeight,\r\n\t      \twidth: window.innerWidth,\r\n\t    }\r\n\t    window.addEventListener(\"resize\", this.update)\r\n\t}\r\n\r\n\tstyle = {\r\n\t    wrapper: {\r\n\t      display: \"block\",\r\n\t      top:        50,\r\n\t      height:     'calc(100% - 50px)',\r\n\t      width:      '100vw',\r\n\t      position:   'fixed'\r\n\t    },\r\n\t    blocks: {},\r\n\t    menulink: {\r\n\t    \t// TODO: hier kann man schön conditional logic als breakpoints fahren, abhängig von this.state.width /.height\r\n\t    } \r\n  \t}\r\n\r\n  \tcomponentDidMount(){\r\n\r\n\t  \tconst runCode = () => {\r\n\r\n\t  \t\tconst Body = Matter.Body\r\n\t\t\tconst fallables = document.querySelectorAll(\".fallable\")\r\n\t\t\tconsole.dir(fallables)\r\n\t\t\t\r\n\t\t\tconst engine = Matter.Engine.create()\r\n\t\t\t\r\n\t\t\tconst stack1 = Matter.Composites.stack(\r\n\t\t  \t\t// xx, yy, columns, rows, columnGap, rowGap, cb\r\n\t\t  \t\t0, 0, fallables.length, 1, 0, 0,\r\n\t\t  \t\t(xx, yy, i) => {\r\n\t\t  \t\t\tconst randomX = Math.floor((Math.random() * (this.state.width-200)) + 1)\r\n\t\t    \t\tconst {y, width, height} = fallables[i].getBoundingClientRect();\r\n\t\t    \t\tconst box = Matter.Bodies.rectangle(randomX, -this.state.height+200, width, height, {\r\n\t\t      \t\t\t//isStatic: i === 0 || i + 1 === fallables.length\r\n\t\t    \t\t})\r\n\t\t    \t\tconst randomAngularV = () => (Math.random()>0.5)? 1 : -1;\r\n\t\t    \t\t//Body.setAngularVelocity( box, Math.PI/1000*randomAngularV());\r\n\t\t    \t\treturn box\r\n\t\t    \t}\r\n\t\t    )\r\n\t\t    \r\n\r\n\t\t    const wallThickness = 100\r\n\t\t\tconst wallHeight = this.state.height*2\r\n\t\t\tconst wallY = 0\r\n\r\n\t\t    const floor = Matter.Bodies.rectangle(this.state.width/2,this.state.height-50,this.state.width,100)\r\n\t\t    const wallR = Matter.Bodies.rectangle(this.state.width+50,wallY,wallThickness,wallHeight)\r\n\t\t    const wallL = Matter.Bodies.rectangle(-50,wallY,wallThickness,wallHeight)\r\n\t\t    const ceil  = Matter.Bodies.rectangle(this.state.width/2,-this.state.height-50,this.state.width,100)\r\n\t\t    Body.setStatic(floor, true)\r\n\t\t    Body.setStatic(wallR, true)\r\n\t\t    Body.setStatic(wallL, true)\r\n\t\t    Body.setStatic(ceil,  true)\r\n\r\n\t\t\tconst mouseConstraint = Matter.MouseConstraint.create(\r\n\t  \t\t\tengine, {element: document.querySelector(\"#mjs-wrapper\")}\r\n\t\t\t)\r\n\r\n\r\n\t\t\tMatter.World.add(engine.world, [stack1, mouseConstraint, floor, wallL, wallR, ceil])\r\n\t\t\t\r\n\t\t\tfallables.forEach(e => {\r\n\t\t  \t\te.style.position = \"absolute\";\r\n\t\t  \t\te.addEventListener(\"click\", e => {\r\n\t\t    \t\t// hier soll dann etwas passieren. Es gibt aber schon den \"navigate to href\" Event Listener im Menulink Component\r\n\t\t    \t\t// man könnte noch irgendeinen Effekt der bei allen fallables passiert hier anbringen.\r\n\t\t    \t})\r\n\t\t\t});\r\n\r\n\t\t\t(function update() {\r\n\t\t  \t\trequestAnimationFrame(update)\r\n\t\t\t  \tstack1.bodies.forEach((block, i) => {\r\n\t\t\t\t    const thisFallable = fallables[i]\r\n\t\t\t\t    const {x, y} = block.vertices[0]\r\n\t\t\t\t    thisFallable.style.top = `${y}px`\r\n\t\t\t\t    thisFallable.style.left = `${x}px`\r\n\t\t\t\t    thisFallable.style.transform = `translate(-50%, -50%) \r\n\t\t\t                             rotate(${block.angle}rad) \r\n\t\t\t                             translate(50%, 50%)`\r\n\t\t\t\t});\r\n\r\n\t  \t\t\tMatter.Engine.update(engine)\r\n\t\t\t})();\r\n\t\t}\r\n  \t\r\n\t\trunCode()\r\n\t\tthis.update()\r\n\t}\r\n\r\n\tupdate = () => {\r\n    \tthis.setState({\r\n\t      \theight: window.innerHeight,\r\n\t      \twidth: window.innerWidth\r\n    \t})\r\n   \t}\r\n   \t\r\n   \tcloseMenu = () => {\r\n   \t\tthis.props.menudrop({menuDrop:false}) \r\n   \t}\r\n\r\n\t\r\n\trender(){\r\n\t\tconst Dummies = []\r\n\t\tfor (let i=0; i < this.props.numberOfDummies; i++) {\r\n   \t\t\tDummies.push(<Dummy/>);\r\n\t\t} \r\n\t  \t\r\n\t  \treturn (\r\n\t\t\t<div id=\"mjs-wrapper\" style={this.style.wrapper}>\r\n\t\t\t\t{this.props.elements}\r\n\t\t\t\t{Dummies}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Scene"]},"metadata":{},"sourceType":"module"}