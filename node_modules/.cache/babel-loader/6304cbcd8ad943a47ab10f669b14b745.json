{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilss\\\\Desktop\\\\Projects\\\\galerie-sens\\\\src\\\\pages\\\\bilderwand.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ZurWand from './../components/zurwand';\nimport Einzelbild from './../components/einzelbild'; // hier m√ºssen Bilder geladen werden\n// const bilder = []\n// bilder.map(...) erstelle <BildThumb />\n\nconst Bilderwand = props => {\n  _s();\n\n  const [einzelAnsicht, setEinzelAnsicht] = useState(false);\n  const [selectedArt, setSelectedArt] = useState(0); // ### click auf Bild -> setEinzelAnsicht! && set Bildinfos\n\n  const style = {\n    header: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      top: 0,\n      height: 64,\n      position: 'fixed',\n      zIndex: 1\n    },\n    heading: {\n      height: 36,\n      zIndex: 2,\n      background: '#333333',\n      color: 'lightgrey',\n      pointerEvents: 'none',\n      fontSize: '1.5em'\n    },\n    wand: {\n      background: '#2b2b2b',\n      height: '100vh',\n      width: '100%',\n      position: 'fixed',\n      top: 0,\n      left: 0\n    },\n    arrowcontrols: {\n      position: 'absolute',\n      zIndex: 3,\n      color: 'rgb(240,240,240)',\n      display: 'flex',\n      alignItems: 'center',\n      left: 50,\n      height: '100%',\n      top: 0,\n      width: 'calc(100% - 100px)',\n      justifyContent: 'space-between',\n      fontSize: '2.5em',\n      flexDirection: 'row-reverse',\n      pointerEvents: 'none'\n    },\n    arrow: {\n      opacity: '0.6',\n      transition: 'opacity 0.2s ease',\n      fontWeight: 900,\n      cursor: 'pointer',\n      pointerEvents: 'all'\n    },\n    imagewrapper: {\n      position: 'absolute',\n      top: 0,\n      width: '100vw',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: 'left 1s ease'\n    },\n    image: {\n      cursor: 'pointer',\n      display: 'inline',\n      opacity: 0,\n      animationName: 'fadein',\n      animationDuration: '0.4s',\n      animationDelay: '1s',\n      animationTimingFunction: 'ease',\n      animationFillMode: 'forwards',\n      height: '70%'\n    },\n    bildtitel: {\n      color: 'lightgrey'\n    }\n  }; // clickEvent auf IMG, \n  // dann <p className=\"bild_titel\" style={style.bildtitel}>{props.bilder[0].titel}</p> \n  // unter Einzelbildansicht (EBA)\n\n  const bilder = props.bilder;\n  /*\r\n  \t[i]\r\n  \t\t.titel\r\n  \t\t.beschreibung\r\n  \t\t.preis\r\n  \t\t.tags\r\n  \t\t.groesse.x/.y/.z\r\n  \t\t.gewicht\r\n  \t\t.altSrc // [filename2,filename3]\r\n  \t\t.source\r\n  \t\t.alt#txt\r\n  \t\t.verkauft // true,false\r\n  */\n\n  const diesesKunstwerk = el => {\n    setSelectedArt(el.target.id);\n    setEinzelAnsicht(true);\n  };\n\n  const bilderHTML = bilder.map(bild => {\n    const left = bild.id * 100;\n    const wrapperstyleobj = JSON.stringify(style.imagewrapper);\n    const newwrapperstyle = JSON.parse(wrapperstyleobj);\n    newwrapperstyle.left = left + '%';\n    const imgstyleobj = JSON.stringify(style.image);\n    const newimgstyle = JSON.parse(imgstyleobj);\n\n    if (bild.schatten) {\n      newimgstyle.webkitBoxShadow = '0px 0px 52px 0px rgba(0, 0, 0, 1)';\n      newimgstyle.mozBoxShadow = '0px 0px 52px 0px rgba(0, 0, 0, 1)';\n      newimgstyle.boxShadow = '0 0 10px rgba(0,0,0,1),0 0 30px rgba(0,0,0,0.85),0 0 40px rgba(0,0,0,0.45),0 0 50px rgba(0,0,0,0.3),0 0 60px rgba(0,0,0,0.25)';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: bild.id,\n      className: \"bilderwrapper\",\n      style: newwrapperstyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: bild.id,\n      className: \"wandbild\",\n      style: newimgstyle,\n      alt: bilder[bild.id].altTxt,\n      src: bilder[bild.id].source,\n      onClick: el => {\n        diesesKunstwerk(el);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 86\n      }\n    }));\n  });\n\n  const arrowcontrols = bilder => {\n    if (bilder.length > 1) {\n      const bilderwrap = document.getElementsByClassName('bilderwrapper');\n      console.dir(bilderwrap); // getElementsByClassName returns HTMLCollection not nodelist! Deswegen muss man dort ein bisschen nachhelfen:\n\n      HTMLCollection.prototype.forEach = Array.prototype.forEach;\n\n      const arrownavigation = el => {\n        const getZahl = obj => {\n          // get css value str:\n          const origLeft = obj.style.left; // cut off '%':\n\n          const nurZahl = origLeft.substring(0, origLeft.length - 1);\n          return parseInt(nurZahl); // return nurZahl\n        };\n\n        const checkForUnnecessaryArrows = () => {\n          if (bilderwrap[0].style.left === '0%') {\n            larrw.style.display = 'none';\n          } else {\n            larrw.style.display = 'block';\n          }\n\n          if (bilderwrap[bilderwrap.length - 1].style.left === '0%') {\n            rarrw.style.display = 'none';\n          } else {\n            rarrw.style.display = 'block';\n          }\n        };\n\n        if (el.currentTarget.id === \"leftarrow\" && key) {\n          bilderwrap.forEach(wrap => {\n            const zahl = getZahl(wrap);\n            wrap.style.left = zahl + 100 + '%';\n          });\n        } else {\n          bilderwrap.forEach(wrap => {\n            const zahl = getZahl(wrap);\n            wrap.style.left = zahl - 100 + '%';\n          });\n        }\n\n        const larrw = document.getElementById('leftarrow');\n        const rarrw = document.getElementById('rightarrow');\n        checkForUnnecessaryArrows();\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrowcontrols\",\n        style: style.arrowcontrols,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow\",\n        onkeypress: el => {\n          arrownavigation(el);\n        },\n        onClick: el => {\n          arrownavigation(el);\n        },\n        id: \"rightarrow\",\n        style: style.arrow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }\n      }, \"\\u25E8\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow\",\n        onkeypress: el => {\n          arrownavigation(el);\n        },\n        onClick: el => {\n          arrownavigation(el);\n        },\n        id: \"leftarrow\",\n        style: style.arrow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 6\n        }\n      }, \"\\u25E7\"), /*#__PURE__*/React.createElement(\"style\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }\n      }, `.arrow:hover{opacity:1 !important}#leftarrow{display:none}`));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn sctn_bilderwand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_header\",\n    style: style.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sctn_heading\",\n    style: style.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, props.titel), /*#__PURE__*/React.createElement(ZurWand, {\n    label: \"Anmerkungen\",\n    wandLaden: () => {\n      console.log(`Wand ${props.titel} wird geladen...`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, \"Anmerkungen der K\\xFCnstlerin\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 4\n    }\n  }, arrowcontrols(bilder), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_wand\",\n    style: style.wand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, bilderHTML)), einzelAnsicht && /*#__PURE__*/React.createElement(Einzelbild, {\n    bildinfos: bilder[selectedArt],\n    schliessen: () => {\n      setEinzelAnsicht(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 22\n    }\n  }));\n};\n\n_s(Bilderwand, \"MzSSjMn0kSVZXmeom/Lj1oESJnk=\");\n\n_c = Bilderwand;\nexport default Bilderwand;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bilderwand\");","map":{"version":3,"sources":["C:/Users/nilss/Desktop/Projects/galerie-sens/src/pages/bilderwand.js"],"names":["React","useState","ZurWand","Einzelbild","Bilderwand","props","einzelAnsicht","setEinzelAnsicht","selectedArt","setSelectedArt","style","header","display","flexDirection","alignItems","justifyContent","top","height","position","zIndex","heading","background","color","pointerEvents","fontSize","wand","width","left","arrowcontrols","arrow","opacity","transition","fontWeight","cursor","imagewrapper","image","animationName","animationDuration","animationDelay","animationTimingFunction","animationFillMode","bildtitel","bilder","diesesKunstwerk","el","target","id","bilderHTML","map","bild","wrapperstyleobj","JSON","stringify","newwrapperstyle","parse","imgstyleobj","newimgstyle","schatten","webkitBoxShadow","mozBoxShadow","boxShadow","altTxt","source","length","bilderwrap","document","getElementsByClassName","console","dir","HTMLCollection","prototype","forEach","Array","arrownavigation","getZahl","obj","origLeft","nurZahl","substring","parseInt","checkForUnnecessaryArrows","larrw","rarrw","currentTarget","key","wrap","zahl","getElementById","titel","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ZurWand from './../components/zurwand'\r\nimport Einzelbild from './../components/einzelbild'\r\n\r\n// hier m√ºssen Bilder geladen werden\r\n// const bilder = []\r\n// bilder.map(...) erstelle <BildThumb />\r\n\r\n\r\nconst Bilderwand = props => {\r\n\tconst [einzelAnsicht, setEinzelAnsicht] = useState(false)\r\n\tconst [selectedArt, setSelectedArt] = useState(0)\r\n\r\n\t// ### click auf Bild -> setEinzelAnsicht! && set Bildinfos\r\n\r\n\tconst style = {\r\n\t\theader:{\r\n\t\t\tdisplay:'flex',\r\n\t\t\tflexDirection: 'row',\r\n    \t\talignItems: 'center',\r\n    \t\tjustifyContent: 'space-between',\r\n    \t\ttop: 0,\r\n    \t\theight: 64,\r\n    \t\tposition: 'fixed',\r\n    \t\tzIndex: 1\r\n\t\t},\r\n\t\theading: {\r\n\t\t\theight: 36,\r\n\t\t\tzIndex:2,\r\n\t\t\tbackground:'#333333',\r\n\t\t\tcolor:'lightgrey',\r\n\t\t\tpointerEvents: 'none',\r\n\t\t\tfontSize:'1.5em'\r\n\t\t},\r\n\t\twand:{\r\n\t\t\tbackground:'#2b2b2b',\r\n\t\t\theight:'100vh',\r\n\t\t\twidth:'100%',\r\n\t\t\tposition: 'fixed',\r\n\t\t    top: 0,\r\n\t\t    left: 0\r\n\t\t},\r\n\t\tarrowcontrols:{\r\n\t\t\tposition:'absolute',\r\n\t\t\tzIndex:3,\r\n\t\t\tcolor:'rgb(240,240,240)',\r\n\t\t\tdisplay:'flex',\r\n\t\t\talignItems:'center',\r\n\t\t\tleft:50,\r\n\t\t\theight:'100%',\r\n\t\t\ttop:0,\r\n\t\t\twidth:'calc(100% - 100px)',\r\n\t\t\tjustifyContent:'space-between',\r\n\t\t\tfontSize:'2.5em',\r\n\t\t\tflexDirection:'row-reverse',\r\n\t\t\tpointerEvents:'none'\r\n\t\t},\r\n\t\tarrow:{\r\n\t\t\topacity:'0.6',\r\n\t\t\ttransition:'opacity 0.2s ease',\r\n\t\t\tfontWeight:900,\r\n\t\t\tcursor:'pointer',\r\n\t\t\tpointerEvents:'all'\r\n\t\t},\r\n\t\timagewrapper:{\r\n\t\t\tposition:'absolute',\r\n\t\t\ttop:0,\r\n\t\t\twidth:'100vw',\r\n\t\t\theight:'100%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t    flexDirection: 'row',\r\n\t\t    alignItems: 'center',\r\n\t\t    justifyContent: 'center',\r\n\t\t    transition: 'left 1s ease'\r\n\t\t},\r\n\t\timage:{\r\n\t\t\tcursor:'pointer',\r\n\t\t\tdisplay:'inline',\r\n\t\t\topacity:0,\r\n\t\t\tanimationName:'fadein',\r\n\t\t\tanimationDuration:'0.4s',\r\n\t\t\tanimationDelay:'1s',\r\n\t\t\tanimationTimingFunction: 'ease',\r\n\t\t\tanimationFillMode: 'forwards',\r\n\t\t\theight:'70%'\r\n\t\t},\r\n\t\tbildtitel:{\r\n\t\t\tcolor: 'lightgrey'\r\n\t\t}\r\n\t}\r\n\r\n\t// clickEvent auf IMG, \r\n\t// dann <p className=\"bild_titel\" style={style.bildtitel}>{props.bilder[0].titel}</p> \r\n\t// unter Einzelbildansicht (EBA)\r\n\r\n\tconst bilder = props.bilder\r\n\t/*\r\n\t\t[i]\r\n\t\t\t.titel\r\n\t\t\t.beschreibung\r\n\t\t\t.preis\r\n\t\t\t.tags\r\n\t\t\t.groesse.x/.y/.z\r\n\t\t\t.gewicht\r\n\t\t\t.altSrc // [filename2,filename3]\r\n\t\t\t.source\r\n\t\t\t.alt#txt\r\n\t\t\t.verkauft // true,false\r\n\t*/\r\n\r\n\tconst diesesKunstwerk = (el) => {\r\n\t\tsetSelectedArt(el.target.id)\r\n\t\tsetEinzelAnsicht(true)\r\n\t}\r\n\r\n\tconst bilderHTML = bilder.map((bild) => {\r\n\t\tconst left = bild.id*100\r\n\r\n\t\tconst wrapperstyleobj = JSON.stringify(style.imagewrapper)\r\n\t\tconst newwrapperstyle = JSON.parse(wrapperstyleobj)\r\n\t\tnewwrapperstyle.left=left+'%'\r\n\r\n\t\tconst imgstyleobj = JSON.stringify(style.image)\r\n\t\tconst newimgstyle = JSON.parse(imgstyleobj)\r\n\t\tif (bild.schatten) {\r\n\t\t\tnewimgstyle.webkitBoxShadow='0px 0px 52px 0px rgba(0, 0, 0, 1)'\r\n\t\t\tnewimgstyle.mozBoxShadow   ='0px 0px 52px 0px rgba(0, 0, 0, 1)'\r\n\t\t\tnewimgstyle.boxShadow      ='0 0 10px rgba(0,0,0,1),0 0 30px rgba(0,0,0,0.85),0 0 40px rgba(0,0,0,0.45),0 0 50px rgba(0,0,0,0.3),0 0 60px rgba(0,0,0,0.25)'\r\n\t\t}\r\n\r\n        return (<div key={bild.id} className=\"bilderwrapper\" style={newwrapperstyle}><img id={bild.id} className=\"wandbild\" style={newimgstyle} alt={bilder[bild.id].altTxt} src={bilder[bild.id].source} onClick={(el)=>{diesesKunstwerk(el)}}/></div>)\r\n    })\r\n\r\n\r\n    const arrowcontrols = (bilder) => {\r\n    \tif (bilder.length > 1) {\r\n\t\t\tconst bilderwrap = document.getElementsByClassName('bilderwrapper')\r\n\t\t\tconsole.dir(bilderwrap)\r\n\t\t\t\r\n\t\t\t// getElementsByClassName returns HTMLCollection not nodelist! Deswegen muss man dort ein bisschen nachhelfen:\r\n\t\t\tHTMLCollection.prototype.forEach = Array.prototype.forEach\r\n\r\n\t\t\tconst arrownavigation = (el) => {\r\n\r\n\t\t\t\tconst getZahl = (obj) => {\r\n\t\t\t\t\t// get css value str:\r\n\t\t\t\t\tconst origLeft = obj.style.left\r\n\t\t\t\t\t// cut off '%':\r\n\t\t\t\t\tconst nurZahl = origLeft.substring(0,origLeft.length-1)\t\r\n\t\t\t\t\treturn(parseInt(nurZahl))\r\n\t\t\t\t\t// return nurZahl\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst checkForUnnecessaryArrows = () => {\r\n\t\t\t\t\tif (bilderwrap[0].style.left === '0%') {\r\n\t\t\t\t\t\tlarrw.style.display = 'none'\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlarrw.style.display = 'block'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bilderwrap[bilderwrap.length-1].style.left === '0%') {\r\n\t\t\t\t\t\trarrw.style.display = 'none'\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trarrw.style.display = 'block'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(el.currentTarget.id === \"leftarrow\" && key ) {\r\n\t\t\t\t\tbilderwrap.forEach((wrap) => {\r\n\t\t\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t\t\t\twrap.style.left = (zahl+100)+'%'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbilderwrap.forEach((wrap) => {\r\n\t\t\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t\t\t\twrap.style.left = (zahl-100)+'%'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tconst larrw = document.getElementById('leftarrow')\r\n\t\t\t\tconst rarrw = document.getElementById('rightarrow')\r\n\t\t\t\tcheckForUnnecessaryArrows()\r\n\t\t\t}\r\n\t    \treturn(\r\n\t\t    \t<div className=\"arrowcontrols\" style={style.arrowcontrols}>\r\n\t\t\t\t\t<div className=\"arrow\" onkeypress={(el) => {arrownavigation(el)}} onClick={(el) => {arrownavigation(el)}}  id=\"rightarrow\" style={style.arrow}>&#x25E8;</div>\r\n\t\t\t\t\t<div className=\"arrow\" onkeypress={(el) => {arrownavigation(el)}} onClick={(el) => {arrownavigation(el)}} id=\"leftarrow\" style={style.arrow}>&#x25E7;</div>\r\n\t\t\t\t\t<style>\r\n\t\t  \t\t\t\t{`.arrow:hover{opacity:1 !important}#leftarrow{display:none}`}\r\n\t\t\t\t\t</style>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n    } \r\n\r\n\treturn (\r\n\t\t<div className=\"sctn sctn_bilderwand\">\r\n\t\t\t<div className=\"sctn_header\" style={style.header}>\r\n\t\t\t\t<h1 className=\"sctn_heading\" style={style.heading}>{props.titel}</h1>\r\n\t\t\t\t<ZurWand label=\"Anmerkungen\" wandLaden={() => {console.log(`Wand ${props.titel} wird geladen...`)}}>Anmerkungen der K√ºnstlerin</ZurWand>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sctn_body\">\r\n\t\t\t\t{arrowcontrols(bilder)}\r\n\t\t\t\t<div className=\"sctn_wand\" style={style.wand}>\r\n\t\t\t\t\t{bilderHTML}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{einzelAnsicht && <Einzelbild bildinfos={bilder[selectedArt]} schliessen={()=>{setEinzelAnsicht(false)}} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Bilderwand"]},"metadata":{},"sourceType":"module"}