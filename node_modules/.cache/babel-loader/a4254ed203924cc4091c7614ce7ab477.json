{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\nilss\\\\Desktop\\\\Projects\\\\galerie-sens\\\\src\\\\components\\\\scene2.js\";\nimport React from \"react\";\nimport Matter from \"matter-js\";\nimport Audiocard from './audiocard';\n\nclass Scene extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.runCode = () => {\n      const listEls = document.querySelectorAll(\"#mjs-wrapper .MuiPaper-root\");\n      const engine = Matter.Engine.create();\n      const stack = Matter.Composites.stack( // xx, yy, columns, rows, columnGap, rowGap, cb\n      0, 0, listEls.length, 1, 0, 0, (xx, yy, i) => {\n        const {\n          x,\n          y,\n          width,\n          height\n        } = listEls[i].getBoundingClientRect();\n        return Matter.Bodies.rectangle(x, y, width, height, {//isStatic: i === 0 || i + 1 === listEls.length\n        });\n      });\n      const mouseConstraint = Matter.MouseConstraint.create(engine, {\n        element: document.querySelector(\"#mjs-wrapper\")\n      });\n      Matter.World.add(engine.world, [stack, mouseConstraint]);\n      listEls.forEach(e => {\n        e.style.position = \"absolute\";\n        e.addEventListener(\"click\", e => {\n          console.log(e.target.textContent);\n        });\n      });\n\n      (function update() {\n        requestAnimationFrame(update);\n        stack.bodies.forEach((block, i) => {\n          const li = listEls[i];\n          const {\n            x,\n            y\n          } = block.vertices[0];\n          li.style.top = `${y}px`;\n          li.style.left = `${x}px`;\n          li.style.transform = `translate(-50%, -50%) \n\t\t\t                             rotate(${block.angle}rad) \n\t\t\t                             translate(50%, 50%)`;\n        });\n        Matter.Engine.update(engine);\n      })();\n    };\n  }\n\n  returnStyle() {\n    return {\n      display: \"block\",\n      top: 50,\n      height: 'calc(100% - 50px)',\n      background: 'red',\n      width: '100vw',\n      position: 'fixed'\n    };\n  }\n\n  componentDidMount() {\n    this.runCode();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mjs-wrapper\",\n      style: this.returnStyle(),\n      children: [/*#__PURE__*/_jsxDEV(Audiocard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Audiocard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Audiocard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Scene;","map":{"version":3,"sources":["C:/Users/nilss/Desktop/Projects/galerie-sens/src/components/scene2.js"],"names":["React","Matter","Audiocard","Scene","Component","runCode","listEls","document","querySelectorAll","engine","Engine","create","stack","Composites","length","xx","yy","i","x","y","width","height","getBoundingClientRect","Bodies","rectangle","mouseConstraint","MouseConstraint","element","querySelector","World","add","world","forEach","e","style","position","addEventListener","console","log","target","textContent","update","requestAnimationFrame","bodies","block","li","vertices","top","left","transform","angle","returnStyle","display","background","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAYjCC,OAZiC,GAYvB,MAAM;AAChB,YAAMC,OAAO,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,6BAA1B,CAAhB;AAEA,YAAMC,MAAM,GAAGR,MAAM,CAACS,MAAP,CAAcC,MAAd,EAAf;AAEA,YAAMC,KAAK,GAAGX,MAAM,CAACY,UAAP,CAAkBD,KAAlB,EACX;AACA,OAFW,EAER,CAFQ,EAELN,OAAO,CAACQ,MAFH,EAEW,CAFX,EAEc,CAFd,EAEiB,CAFjB,EAGX,CAACC,EAAD,EAAKC,EAAL,EAASC,CAAT,KAAe;AACb,cAAM;AAACC,UAAAA,CAAD;AAAIC,UAAAA,CAAJ;AAAOC,UAAAA,KAAP;AAAcC,UAAAA;AAAd,YAAwBf,OAAO,CAACW,CAAD,CAAP,CAAWK,qBAAX,EAA9B;AACA,eAAOrB,MAAM,CAACsB,MAAP,CAAcC,SAAd,CAAwBN,CAAxB,EAA2BC,CAA3B,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6C,CACjD;AADiD,SAA7C,CAAP;AAGA,OARS,CAAd;AAUA,YAAMI,eAAe,GAAGxB,MAAM,CAACyB,eAAP,CAAuBf,MAAvB,CACrBF,MADqB,EACb;AAACkB,QAAAA,OAAO,EAAEpB,QAAQ,CAACqB,aAAT,CAAuB,cAAvB;AAAV,OADa,CAAxB;AAIA3B,MAAAA,MAAM,CAAC4B,KAAP,CAAaC,GAAb,CAAiBrB,MAAM,CAACsB,KAAxB,EAA+B,CAACnB,KAAD,EAAQa,eAAR,CAA/B;AAEAnB,MAAAA,OAAO,CAAC0B,OAAR,CAAgBC,CAAC,IAAI;AAClBA,QAAAA,CAAC,CAACC,KAAF,CAAQC,QAAR,GAAmB,UAAnB;AACAF,QAAAA,CAAC,CAACG,gBAAF,CAAmB,OAAnB,EAA4BH,CAAC,IAAI;AAC/BI,UAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACM,MAAF,CAASC,WAArB;AACA,SAFF;AAGF,OALD;;AAOA,OAAC,SAASC,MAAT,GAAkB;AAChBC,QAAAA,qBAAqB,CAACD,MAAD,CAArB;AACA7B,QAAAA,KAAK,CAAC+B,MAAN,CAAaX,OAAb,CAAqB,CAACY,KAAD,EAAQ3B,CAAR,KAAc;AACjC,gBAAM4B,EAAE,GAAGvC,OAAO,CAACW,CAAD,CAAlB;AACA,gBAAM;AAACC,YAAAA,CAAD;AAAIC,YAAAA;AAAJ,cAASyB,KAAK,CAACE,QAAN,CAAe,CAAf,CAAf;AACAD,UAAAA,EAAE,CAACX,KAAH,CAASa,GAAT,GAAgB,GAAE5B,CAAE,IAApB;AACA0B,UAAAA,EAAE,CAACX,KAAH,CAASc,IAAT,GAAiB,GAAE9B,CAAE,IAArB;AACA2B,UAAAA,EAAE,CAACX,KAAH,CAASe,SAAT,GAAsB;AAC9B,yCAAyCL,KAAK,CAACM,KAAM;AACrD,oDAFQ;AAGH,SARC;AASAjD,QAAAA,MAAM,CAACS,MAAP,CAAc+B,MAAd,CAAqBhC,MAArB;AACF,OAZD;AAaA,KArDiC;AAAA;;AAEnC0C,EAAAA,WAAW,GAAE;AACT,WAAO;AACLC,MAAAA,OAAO,EAAE,OADJ;AAELL,MAAAA,GAAG,EAAS,EAFP;AAGL1B,MAAAA,MAAM,EAAM,mBAHP;AAILgC,MAAAA,UAAU,EAAE,KAJP;AAKLjC,MAAAA,KAAK,EAAO,OALP;AAMLe,MAAAA,QAAQ,EAAI;AANP,KAAP;AAQD;;AA2CDmB,EAAAA,iBAAiB,GAAE;AAEpB,SAAKjD,OAAL;AACA;;AAEDkD,EAAAA,MAAM,GAAE;AACL,wBACD;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,KAAK,EAAE,KAAKJ,WAAL,EAA7B;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADC;AAOF;;AAnEkC;;AAqEpC,eAAehD,KAAf","sourcesContent":["import React from \"react\"\r\nimport Matter from \"matter-js\"\r\nimport Audiocard from './audiocard'\r\n\r\nclass Scene extends React.Component {\r\n\r\n\treturnStyle(){\r\n\t    return {\r\n\t      display: \"block\",\r\n\t      top:        50,\r\n\t      height:     'calc(100% - 50px)',\r\n\t      background: 'red',\r\n\t      width:      '100vw',\r\n\t      position:   'fixed'\r\n\t    }  \r\n  \t}\r\n  \trunCode = () => {\r\n\t\t\tconst listEls = document.querySelectorAll(\"#mjs-wrapper .MuiPaper-root\")\r\n\t\t\t\r\n\t\t\tconst engine = Matter.Engine.create()\r\n\r\n\t\t\tconst stack = Matter.Composites.stack(\r\n\t\t  \t\t// xx, yy, columns, rows, columnGap, rowGap, cb\r\n\t\t  \t\t0, 0, listEls.length, 1, 0, 0,\r\n\t\t  \t\t(xx, yy, i) => {\r\n\t\t    \t\tconst {x, y, width, height} = listEls[i].getBoundingClientRect();\r\n\t\t    \t\treturn Matter.Bodies.rectangle(x, y, width, height, {\r\n\t\t      \t\t\t//isStatic: i === 0 || i + 1 === listEls.length\r\n\t\t    \t\t})\r\n\t\t    \t}\r\n\t\t    )\r\n\t\t\tconst mouseConstraint = Matter.MouseConstraint.create(\r\n\t  \t\t\tengine, {element: document.querySelector(\"#mjs-wrapper\")}\r\n\t\t\t)\r\n\t\t\t\r\n\t\t\tMatter.World.add(engine.world, [stack, mouseConstraint])\r\n\r\n\t\t\tlistEls.forEach(e => {\r\n\t\t  \t\te.style.position = \"absolute\";\r\n\t\t  \t\te.addEventListener(\"click\", e => {\r\n\t\t    \t\tconsole.log(e.target.textContent)\r\n\t\t    \t})\r\n\t\t\t});\r\n\r\n\t\t\t(function update() {\r\n\t\t  \t\trequestAnimationFrame(update)\r\n\t\t\t  \tstack.bodies.forEach((block, i) => {\r\n\t\t\t\t    const li = listEls[i]\r\n\t\t\t\t    const {x, y} = block.vertices[0]\r\n\t\t\t\t    li.style.top = `${y}px`\r\n\t\t\t\t    li.style.left = `${x}px`\r\n\t\t\t\t    li.style.transform = `translate(-50%, -50%) \r\n\t\t\t                             rotate(${block.angle}rad) \r\n\t\t\t                             translate(50%, 50%)`\r\n\t\t\t\t});\r\n\t  \t\t\tMatter.Engine.update(engine)\r\n\t\t\t})();\r\n\t\t}\r\n  \tcomponentDidMount(){\r\n\t\t\r\n\t\tthis.runCode()\r\n\t}\r\n\t\r\n\trender(){\r\n\t  \treturn (\r\n\t\t\t<div id=\"mjs-wrapper\" style={this.returnStyle()}>\r\n\t\t\t    <Audiocard />\r\n\t\t\t    <Audiocard />\r\n\t\t\t    <Audiocard />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Scene"]},"metadata":{},"sourceType":"module"}