{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilss\\\\Desktop\\\\Projects\\\\galerie-sens\\\\src\\\\pages\\\\bilderwand.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ZurWand from './../components/zurwand';\nimport Einzelbild from './../components/einzelbild'; // import { useParams } from 'react-router-dom'\n// hier müssen Bilder geladen werden\n// const bilder = []\n// bilder.map(...) erstelle <BildThumb />\n\nconst Bilderwand = props => {\n  _s();\n\n  let bilderwrap = document.getElementsByClassName('bilderwrapper'); // getElementsByClassName returns HTMLCollection not nodelist! Deswegen muss man dort ein bisschen nachhelfen:\n\n  HTMLCollection.prototype.forEach = Array.prototype.forEach;\n\n  const checkForUnnecessaryArrows = () => {\n    const wrappers = document.getElementsByClassName('bilderwrapper');\n    const larrw = document.getElementById('leftarrow');\n    const rarrw = document.getElementById('rightarrow');\n\n    if (wrappers[0].style.left === '0%') {\n      larrw.style.display = 'none';\n    } else {\n      larrw.style.display = 'block';\n    }\n\n    if (wrappers[wrappers.length - 1].style.left === '0%') {\n      rarrw.style.display = 'none';\n    } else {\n      rarrw.style.display = 'block';\n    }\n  };\n\n  const arrownavigation = e => {\n    const wrappers = document.getElementsByClassName('bilderwrapper');\n\n    if (e.currentTarget.id === \"leftarrow\") {\n      wrappers.forEach(wrap => {\n        const zahl = getZahl(wrap);\n        wrap.style.left = zahl + 100 + '%';\n      });\n    } else {\n      wrappers.forEach(wrap => {\n        const zahl = getZahl(wrap);\n        wrap.style.left = zahl - 100 + '%';\n      });\n    }\n\n    checkForUnnecessaryArrows();\n  }; // let { pathParams } = useParams(); abandoned due to REACT ISSUES...\n  // useEffect(()=>{console.log(pathParams)},[pathParams]);\n\n\n  const getZahl = obj => {\n    // get css value str:\n    const origLeft = obj.style.left; // cut off '%':\n\n    const nurZahl = origLeft.substring(0, origLeft.length - 1);\n    return parseInt(nurZahl); // return nurZahl\n  };\n\n  const currentArt = () => {\n    // sets the state of selected art to the id number of the currently centered img \n    // used for arrow navigation including inside single art (arrow keys)\n    const wrappers = document.getElementsByClassName('bilderwrapper');\n    let wrapper;\n\n    for (const index in wrappers) {\n      if (typeof wrappers[index].style !== 'undefined') {\n        if (wrappers[index].style.left === '0%') {\n          wrapper = wrappers[index];\n        }\n      }\n    } // console.dir(wrapper)\n\n\n    setSelectedArt(wrapper.querySelector('img').id);\n  }; // Funktion, die je nach dem URL-Parameter oben in der Addresszeile \n  // (z.B. https://galerie-sens.de/bilder/suesses/3) auf das entsprechende Bild \"fährt\". \n  // Das brauchte etwas Bastelei:\n\n\n  const urlParamNumber = () => {\n    // aktualisiere die oben definierte Variable die die Bildelemente enthält: \n    const wrappers = document.getElementsByClassName('bilderwrapper'); // wenn es mehr als eins sind, muss das Programm überhaupt erst aktiv werden, sonst springe nach unten:\n\n    if (wrappers.length > 1) {\n      // test: console.log(\"es gibt mehr als ein Bild\")\n      // erstelle eine Variable, die den genauen Text der URL, inkl. der Bildnummer, enthält:\n      const CSSleftValueIndex = window.location.href; // erstelle eine Variable, die eine Liste der Positionsnummern des Zeichens \"/\" enthält:\n      // (z.B. ist das letzte / an 5., 6., 12. und 32. Position, dann soll hier [5,6,12,21] erzeugt werden)\n\n      let indices = []; // eine Wiederholung, die diese URL-Zeichenkette Stelle für Stelle durchgeht, \n      // und wenn das jeweilige Zeichen ein / ist, dann füge diese Stelle der indices-Liste hinzu.\n\n      for (let i = 0; i < CSSleftValueIndex.length; i++) {\n        if (CSSleftValueIndex[i] === \"/\") indices.push(i);\n      } // erzeuge eine neue Zeichenkette, \n      // die alles von der obigen URL-Textvariablen abschneidet was vor und inkl. dem letzten \"/\" steht.\n      // Oder andersherum: die nur die Bild-Zahl am Ende übriglässt.\n\n\n      const outputStr = CSSleftValueIndex.slice(indices[indices.length - 1] + 1); // Neue Variable: multipliziere diese Zahl mit 100, damit wir zu Positions-Prozenten für die Bewegung des Layouts kommen:\n      // diese Multiplikation macht aus der Zeichenkette automatisch eine Zahl\n      // Bsp. oben: das 4. Bild (ausgehend vom 0.) also sollten, \n      // ausgehend von left:0% alle Bilder um -3*100% nach links verschoben werden. \n\n      const leftIntegerValue = outputStr * 100; // wrappers sind die die Bilder umschließenden HTML-divs, für jeden dieser Elemente einmal das Style-Attribut \"links\" \n      // als reine Zahl auslesen (getZahl erledigt dies),\n      // und dann die oben ermittelte Hunderterzahl davon abziehen.\n\n      wrappers.forEach(wrap => {\n        const zahl = getZahl(wrap);\n        wrap.style.left = zahl - leftIntegerValue + '%';\n      }); // funktioniert! Jetzt muss ich nur noch die Navigation links / rechts anpassen:\n\n      checkForUnnecessaryArrows();\n    }\n  };\n\n  setTimeout(urlParamNumber(), 100); // CSS left value of all image wrappers must now deduct this value fron its current value.\n  // test: alert(urlParamNumber())\n\n  const [einzelAnsicht, setEinzelAnsicht] = useState(false);\n  const [selectedArt, setSelectedArt] = useState(0);\n  let SingleArtView = einzelAnsicht; //setEinzelAnsicht(false) infinite loop because component re-renders\n  //alert(props.match.params)\n  // ### click auf Bild -> setEinzelAnsicht! && set Bildinfos\n\n  const style = {\n    header: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      top: 0,\n      height: 64,\n      position: 'fixed',\n      zIndex: 1\n    },\n    heading: {\n      height: 36,\n      zIndex: 2,\n      color: 'lightgrey',\n      pointerEvents: 'none',\n      fontSize: '1.5em'\n    },\n    wand: {\n      background: '#2b2b2b',\n      height: '100vh',\n      width: '100%',\n      position: 'fixed',\n      top: 0,\n      left: 0\n    },\n    arrowcontrols: {\n      position: 'absolute',\n      zIndex: 3,\n      color: 'rgb(240,240,240)',\n      display: 'flex',\n      alignItems: 'center',\n      left: 50,\n      height: '100%',\n      top: 0,\n      width: 'calc(100% - 100px)',\n      justifyContent: 'space-between',\n      fontSize: '2.5em',\n      flexDirection: 'row-reverse',\n      pointerEvents: 'none'\n    },\n    arrow: {\n      opacity: '0.6',\n      transition: 'opacity 0.2s ease',\n      fontWeight: 900,\n      cursor: 'pointer',\n      pointerEvents: 'all'\n    },\n    imagewrapper: {\n      position: 'absolute',\n      top: 0,\n      width: '100vw',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: 'left 1s ease'\n    },\n    image: {\n      cursor: 'pointer',\n      display: 'inline',\n      opacity: 0,\n      animationName: 'fadein',\n      animationDuration: '0.4s',\n      animationDelay: '1s',\n      animationTimingFunction: 'ease',\n      animationFillMode: 'forwards',\n      height: '70%'\n    },\n    bildtitel: {\n      color: 'lightgrey'\n    }\n  }; // clickEvent auf IMG, \n  // dann <p className=\"bild_titel\" style={style.bildtitel}>{props.bilder[0].titel}</p> \n  // unter Einzelbildansicht (EBA)\n\n  const bilder = props.bilder;\n  /*\r\n  \t[i]\r\n  \t\t.titel\r\n  \t\t.beschreibung\r\n  \t\t.preis\r\n  \t\t.tags\r\n  \t\t.groesse.x/.y/.z\r\n  \t\t.gewicht\r\n  \t\t.altSrc // [filename2,filename3]\r\n  \t\t.source\r\n  \t\t.alt#txt\r\n  \t\t.verkauft // true,false\r\n  */\n  // NAVIGATION BY ARROW KEYS WILL NOT CALL CURRENTART FUNCTION !!!!!!\n\n  const singleArtView = el => {\n    // switching of single art \n    setSelectedArt(el.target.id);\n    setEinzelAnsicht(true);\n    SingleArtView = true;\n  };\n\n  const bilderHTML = bilder.map(bild => {\n    const left = bild.id * 100;\n    const wrapperstyleobj = JSON.stringify(style.imagewrapper);\n    const newwrapperstyle = JSON.parse(wrapperstyleobj);\n    newwrapperstyle.left = left + '%';\n    const imgstyleobj = JSON.stringify(style.image);\n    const newimgstyle = JSON.parse(imgstyleobj);\n\n    if (bild.schatten) {\n      newimgstyle.WebkitBoxShadow = '0px 0px 52px 0px rgba(0, 0, 0, 1)';\n      newimgstyle.MozBoxShadow = '0px 0px 52px 0px rgba(0, 0, 0, 1)';\n      newimgstyle.boxShadow = '0 0 10px rgba(0,0,0,1),0 0 30px rgba(0,0,0,0.85),0 0 40px rgba(0,0,0,0.45),0 0 50px rgba(0,0,0,0.3),0 0 60px rgba(0,0,0,0.25)';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: bild.id,\n      className: \"bilderwrapper\",\n      style: newwrapperstyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: bild.id,\n      className: \"wandbild\",\n      style: newimgstyle,\n      alt: bilder[bild.id].altTxt,\n      src: bilder[bild.id].source,\n      onClick: el => {\n        singleArtView(el);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 86\n      }\n    }));\n  });\n  document.addEventListener('keydown', function (evt) {\n    evt.stopImmediatePropagation();\n\n    if (document.querySelector('.bilderwrapper') !== null) {\n      evt = evt || window.event;\n\n      if (bilderwrap.length > 1) {\n        if (evt.keyCode === 37) {\n          if (bilderwrap[0].style.left !== '0%') {\n            bilderwrap.forEach(wrap => {\n              const zahl = getZahl(wrap);\n              wrap.style.left = zahl + 100 + '%';\n            });\n            currentArt();\n          }\n        } else if (evt.keyCode === 39) {\n          if (bilderwrap[bilderwrap.length - 1].style.left !== '0%') {\n            bilderwrap.forEach(wrap => {\n              const zahl = getZahl(wrap);\n              wrap.style.left = zahl - 100 + '%';\n            });\n            currentArt();\n          }\n        } // check buttons\n\n\n        checkForUnnecessaryArrows();\n      }\n    }\n  });\n\n  const arrowcontrols = bilder => {\n    if (bilder.length > 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrowcontrols\",\n        style: style.arrowcontrols,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow\",\n        onClick: el => {\n          arrownavigation(el);\n          currentArt();\n        },\n        id: \"rightarrow\",\n        style: style.arrow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 6\n        }\n      }, \"\\u25E8\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow\",\n        onClick: el => {\n          arrownavigation(el);\n          currentArt();\n        },\n        id: \"leftarrow\",\n        style: style.arrow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 6\n        }\n      }, \"\\u25E7\"), /*#__PURE__*/React.createElement(\"style\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 6\n        }\n      }, `.arrow:hover{opacity:1 !important}#leftarrow{display:none}`));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn sctn_bilderwand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_header\",\n    style: style.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sctn_heading\",\n    style: style.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 5\n    }\n  }, props.titel), /*#__PURE__*/React.createElement(ZurWand, {\n    label: \"Anmerkungen\",\n    wandLaden: () => {\n      console.log(`Wand ${props.titel} wird geladen...`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 5\n    }\n  }, \"Anmerkungen der K\\xFCnstlerin\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 4\n    }\n  }, arrowcontrols(bilder), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_wand\",\n    style: style.wand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 5\n    }\n  }, bilderHTML)), SingleArtView && /*#__PURE__*/React.createElement(Einzelbild, {\n    key: props.id,\n    bildinfos: bilder[selectedArt],\n    schliessen: () => {\n      setEinzelAnsicht(false);\n      SingleArtView = false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 22\n    }\n  }));\n};\n\n_s(Bilderwand, \"MzSSjMn0kSVZXmeom/Lj1oESJnk=\");\n\n_c = Bilderwand;\nexport default Bilderwand;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bilderwand\");","map":{"version":3,"sources":["C:/Users/nilss/Desktop/Projects/galerie-sens/src/pages/bilderwand.js"],"names":["React","useState","useEffect","ZurWand","Einzelbild","Bilderwand","props","bilderwrap","document","getElementsByClassName","HTMLCollection","prototype","forEach","Array","checkForUnnecessaryArrows","wrappers","larrw","getElementById","rarrw","style","left","display","length","arrownavigation","e","currentTarget","id","wrap","zahl","getZahl","obj","origLeft","nurZahl","substring","parseInt","currentArt","wrapper","index","setSelectedArt","querySelector","urlParamNumber","CSSleftValueIndex","window","location","href","indices","i","push","outputStr","slice","leftIntegerValue","setTimeout","einzelAnsicht","setEinzelAnsicht","selectedArt","SingleArtView","header","flexDirection","alignItems","justifyContent","top","height","position","zIndex","heading","color","pointerEvents","fontSize","wand","background","width","arrowcontrols","arrow","opacity","transition","fontWeight","cursor","imagewrapper","image","animationName","animationDuration","animationDelay","animationTimingFunction","animationFillMode","bildtitel","bilder","singleArtView","el","target","bilderHTML","map","bild","wrapperstyleobj","JSON","stringify","newwrapperstyle","parse","imgstyleobj","newimgstyle","schatten","WebkitBoxShadow","MozBoxShadow","boxShadow","altTxt","source","addEventListener","evt","stopImmediatePropagation","event","keyCode","titel","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport ZurWand from './../components/zurwand'\r\nimport Einzelbild from './../components/einzelbild'\r\n// import { useParams } from 'react-router-dom'\r\n\r\n// hier müssen Bilder geladen werden\r\n// const bilder = []\r\n// bilder.map(...) erstelle <BildThumb />\r\n\r\n\r\nconst Bilderwand = props => {\r\n\r\n\tlet bilderwrap = document.getElementsByClassName('bilderwrapper')\r\n\t// getElementsByClassName returns HTMLCollection not nodelist! Deswegen muss man dort ein bisschen nachhelfen:\r\n\tHTMLCollection.prototype.forEach = Array.prototype.forEach\r\n\r\n\r\n\tconst checkForUnnecessaryArrows = () => {\r\n\r\n\t\tconst wrappers = document.getElementsByClassName('bilderwrapper')\r\n\t\tconst larrw = document.getElementById('leftarrow')\r\n\t\tconst rarrw = document.getElementById('rightarrow')\r\n\r\n\t\tif (wrappers[0].style.left === '0%') {\r\n\t\t\tlarrw.style.display = 'none'\r\n\t\t} else {\r\n\t\t\tlarrw.style.display = 'block'\r\n\t\t}\r\n\t\tif (wrappers[wrappers.length-1].style.left === '0%') {\r\n\t\t\trarrw.style.display = 'none'\r\n\t\t} else {\r\n\t\t\trarrw.style.display = 'block'\r\n\t\t}\r\n\t}\r\n\r\n\tconst arrownavigation = (e) => {\r\n\r\n\t\tconst wrappers = document.getElementsByClassName('bilderwrapper')\r\n\t\t\t\t\r\n\t\tif (e.currentTarget.id === \"leftarrow\") {\r\n\t\t\twrappers.forEach((wrap) => {\r\n\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t\twrap.style.left = (zahl+100)+'%'\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\twrappers.forEach((wrap) => {\r\n\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t\twrap.style.left = (zahl-100)+'%'\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tcheckForUnnecessaryArrows()\r\n\t}\r\n\r\n\r\n\t// let { pathParams } = useParams(); abandoned due to REACT ISSUES...\r\n\t// useEffect(()=>{console.log(pathParams)},[pathParams]);\r\n\r\n\tconst getZahl = (obj) => {\r\n\t\t// get css value str:\r\n\t\tconst origLeft = obj.style.left\r\n\t\t// cut off '%':\r\n\t\tconst nurZahl = origLeft.substring(0,origLeft.length-1)\t\r\n\t\treturn(parseInt(nurZahl))\r\n\t\t// return nurZahl\r\n\t}\r\n\r\n\tconst currentArt = () => {\r\n\r\n\t\t// sets the state of selected art to the id number of the currently centered img \r\n\t\t// used for arrow navigation including inside single art (arrow keys)\r\n\r\n\t\tconst wrappers = document.getElementsByClassName('bilderwrapper')\r\n\t\tlet wrapper\r\n\t\tfor (const index in wrappers) {\r\n\t\t\tif (typeof wrappers[index].style !== 'undefined') {\r\n\t\t\t\tif (wrappers[index].style.left === '0%') {\r\n\t\t\t\t\twrapper = wrappers[index]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.dir(wrapper)\r\n\t\tsetSelectedArt(wrapper.querySelector('img').id)\r\n\t}\r\n\r\n\r\n\t// Funktion, die je nach dem URL-Parameter oben in der Addresszeile \r\n\t// (z.B. https://galerie-sens.de/bilder/suesses/3) auf das entsprechende Bild \"fährt\". \r\n\t// Das brauchte etwas Bastelei:\r\n\r\n\tconst urlParamNumber = () => {\r\n\r\n\t\t// aktualisiere die oben definierte Variable die die Bildelemente enthält: \r\n\t\tconst wrappers = document.getElementsByClassName('bilderwrapper')\r\n\r\n\t\t// wenn es mehr als eins sind, muss das Programm überhaupt erst aktiv werden, sonst springe nach unten:\r\n\t\tif (wrappers.length > 1) {\r\n\t\t\t// test: console.log(\"es gibt mehr als ein Bild\")\r\n\r\n\t\t\t// erstelle eine Variable, die den genauen Text der URL, inkl. der Bildnummer, enthält:\r\n\t\t\tconst CSSleftValueIndex = window.location.href\r\n\r\n\t\t\t// erstelle eine Variable, die eine Liste der Positionsnummern des Zeichens \"/\" enthält:\r\n\t\t\t// (z.B. ist das letzte / an 5., 6., 12. und 32. Position, dann soll hier [5,6,12,21] erzeugt werden)\r\n\t\t\tlet indices = []\r\n\t\t\t// eine Wiederholung, die diese URL-Zeichenkette Stelle für Stelle durchgeht, \r\n\t\t\t// und wenn das jeweilige Zeichen ein / ist, dann füge diese Stelle der indices-Liste hinzu.\r\n\t\t\tfor(let i=0; i<CSSleftValueIndex.length;i++) {\r\n\t\t    \tif (CSSleftValueIndex[i] === \"/\") indices.push(i)\r\n\t\t\t}\r\n\t\t\t// erzeuge eine neue Zeichenkette, \r\n\t\t\t// die alles von der obigen URL-Textvariablen abschneidet was vor und inkl. dem letzten \"/\" steht.\r\n\t\t\t// Oder andersherum: die nur die Bild-Zahl am Ende übriglässt.\r\n\t\t\tconst outputStr = CSSleftValueIndex.slice(indices[indices.length-1]+1)\r\n\r\n\t\t\t// Neue Variable: multipliziere diese Zahl mit 100, damit wir zu Positions-Prozenten für die Bewegung des Layouts kommen:\r\n\t\t\t// diese Multiplikation macht aus der Zeichenkette automatisch eine Zahl\r\n\t\t\t// Bsp. oben: das 4. Bild (ausgehend vom 0.) also sollten, \r\n\t\t\t// ausgehend von left:0% alle Bilder um -3*100% nach links verschoben werden. \r\n\t\t\tconst leftIntegerValue = outputStr*100\r\n\t\t\t\r\n\t\t\t// wrappers sind die die Bilder umschließenden HTML-divs, für jeden dieser Elemente einmal das Style-Attribut \"links\" \r\n\t\t\t// als reine Zahl auslesen (getZahl erledigt dies),\r\n\t\t\t// und dann die oben ermittelte Hunderterzahl davon abziehen.\r\n\r\n\t\t\twrappers.forEach((wrap) => {\r\n\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t\twrap.style.left = (zahl-leftIntegerValue)+'%'\r\n\t\t\t})\r\n\r\n\t\t\t// funktioniert! Jetzt muss ich nur noch die Navigation links / rechts anpassen:\r\n\r\n\r\n\r\n\r\n\t\t\tcheckForUnnecessaryArrows()\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(urlParamNumber(),100)\r\n\r\n\t// CSS left value of all image wrappers must now deduct this value fron its current value.\r\n\r\n\r\n\t// test: alert(urlParamNumber())\r\n\r\n\r\n\r\n\r\n\tconst [einzelAnsicht, setEinzelAnsicht] = useState(false)\r\n\tconst [selectedArt, setSelectedArt] = useState(0)\r\n\r\n\tlet SingleArtView = einzelAnsicht\r\n\r\n\t//setEinzelAnsicht(false) infinite loop because component re-renders\r\n\r\n\t//alert(props.match.params)\r\n\r\n\t// ### click auf Bild -> setEinzelAnsicht! && set Bildinfos\r\n\r\n\tconst style = {\r\n\t\theader:{\r\n\t\t\tdisplay:'flex',\r\n\t\t\tflexDirection: 'row',\r\n    \t\talignItems: 'center',\r\n    \t\tjustifyContent: 'space-between',\r\n    \t\ttop: 0,\r\n    \t\theight: 64,\r\n    \t\tposition: 'fixed',\r\n    \t\tzIndex: 1\r\n\t\t},\r\n\t\theading: {\r\n\t\t\theight: 36,\r\n\t\t\tzIndex:2,\r\n\t\t\tcolor:'lightgrey',\r\n\t\t\tpointerEvents: 'none',\r\n\t\t\tfontSize:'1.5em'\r\n\t\t},\r\n\t\twand:{\r\n\t\t\tbackground:'#2b2b2b',\r\n\t\t\theight:'100vh',\r\n\t\t\twidth:'100%',\r\n\t\t\tposition: 'fixed',\r\n\t\t    top: 0,\r\n\t\t    left: 0\r\n\t\t},\r\n\t\tarrowcontrols:{\r\n\t\t\tposition:'absolute',\r\n\t\t\tzIndex:3,\r\n\t\t\tcolor:'rgb(240,240,240)',\r\n\t\t\tdisplay:'flex',\r\n\t\t\talignItems:'center',\r\n\t\t\tleft:50,\r\n\t\t\theight:'100%',\r\n\t\t\ttop:0,\r\n\t\t\twidth:'calc(100% - 100px)',\r\n\t\t\tjustifyContent:'space-between',\r\n\t\t\tfontSize:'2.5em',\r\n\t\t\tflexDirection:'row-reverse',\r\n\t\t\tpointerEvents:'none'\r\n\t\t},\r\n\t\tarrow:{\r\n\t\t\topacity:'0.6',\r\n\t\t\ttransition:'opacity 0.2s ease',\r\n\t\t\tfontWeight:900,\r\n\t\t\tcursor:'pointer',\r\n\t\t\tpointerEvents:'all'\r\n\t\t},\r\n\t\timagewrapper:{\r\n\t\t\tposition:'absolute',\r\n\t\t\ttop:0,\r\n\t\t\twidth:'100vw',\r\n\t\t\theight:'100%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t    flexDirection: 'row',\r\n\t\t    alignItems: 'center',\r\n\t\t    justifyContent: 'center',\r\n\t\t    transition: 'left 1s ease'\r\n\t\t},\r\n\t\timage:{\r\n\t\t\tcursor:'pointer',\r\n\t\t\tdisplay:'inline',\r\n\t\t\topacity:0,\r\n\t\t\tanimationName:'fadein',\r\n\t\t\tanimationDuration:'0.4s',\r\n\t\t\tanimationDelay:'1s',\r\n\t\t\tanimationTimingFunction: 'ease',\r\n\t\t\tanimationFillMode: 'forwards',\r\n\t\t\theight:'70%'\r\n\t\t},\r\n\t\tbildtitel:{\r\n\t\t\tcolor: 'lightgrey'\r\n\t\t}\r\n\t}\r\n\r\n\t// clickEvent auf IMG, \r\n\t// dann <p className=\"bild_titel\" style={style.bildtitel}>{props.bilder[0].titel}</p> \r\n\t// unter Einzelbildansicht (EBA)\r\n\r\n\tconst bilder = props.bilder\r\n\t/*\r\n\t\t[i]\r\n\t\t\t.titel\r\n\t\t\t.beschreibung\r\n\t\t\t.preis\r\n\t\t\t.tags\r\n\t\t\t.groesse.x/.y/.z\r\n\t\t\t.gewicht\r\n\t\t\t.altSrc // [filename2,filename3]\r\n\t\t\t.source\r\n\t\t\t.alt#txt\r\n\t\t\t.verkauft // true,false\r\n\t*/\r\n\r\n\r\n\t// NAVIGATION BY ARROW KEYS WILL NOT CALL CURRENTART FUNCTION !!!!!!\r\n\r\n\r\n\r\n\r\n\tconst singleArtView = (el) => {\r\n\r\n\t\t// switching of single art \r\n\r\n\t\tsetSelectedArt(el.target.id)\r\n\t\tsetEinzelAnsicht(true)\r\n\t\tSingleArtView = true\r\n\t}\r\n\r\n\r\n\tconst bilderHTML = bilder.map((bild) => {\r\n\t\tconst left = bild.id*100\r\n\r\n\t\tconst wrapperstyleobj = JSON.stringify(style.imagewrapper)\r\n\t\tconst newwrapperstyle = JSON.parse(wrapperstyleobj)\r\n\t\tnewwrapperstyle.left=left+'%'\r\n\r\n\t\tconst imgstyleobj = JSON.stringify(style.image)\r\n\t\tconst newimgstyle = JSON.parse(imgstyleobj)\r\n\t\tif (bild.schatten) {\r\n\t\t\tnewimgstyle.WebkitBoxShadow='0px 0px 52px 0px rgba(0, 0, 0, 1)'\r\n\t\t\tnewimgstyle.MozBoxShadow   ='0px 0px 52px 0px rgba(0, 0, 0, 1)'\r\n\t\t\tnewimgstyle.boxShadow      ='0 0 10px rgba(0,0,0,1),0 0 30px rgba(0,0,0,0.85),0 0 40px rgba(0,0,0,0.45),0 0 50px rgba(0,0,0,0.3),0 0 60px rgba(0,0,0,0.25)'\r\n\t\t}\r\n\r\n        return (<div key={bild.id} className=\"bilderwrapper\" style={newwrapperstyle}><img id={bild.id} className=\"wandbild\" style={newimgstyle} alt={bilder[bild.id].altTxt} src={bilder[bild.id].source} onClick={(el)=>{singleArtView(el)}}/></div>)\r\n    })\r\n\r\n\t\r\n\r\n\r\n\tdocument.addEventListener('keydown',function(evt){\r\n\t\tevt.stopImmediatePropagation()\r\n\t\tif(document.querySelector('.bilderwrapper') !== null) {\r\n\t\t\tevt = evt || window.event\r\n\t\t\tif (bilderwrap.length > 1) {\r\n\r\n\t\t\t\tif (evt.keyCode === 37) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (bilderwrap[0].style.left !== '0%') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbilderwrap.forEach((wrap) => {\r\n\r\n\t\t\t\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t\t\t\t\twrap.style.left = (zahl+100)+'%'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tcurrentArt()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\telse if (evt.keyCode === 39) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (bilderwrap[bilderwrap.length-1].style.left !== '0%') {\r\n\t\t\t    \t\t\r\n\t\t\t    \t\tbilderwrap.forEach((wrap) => {\r\n\r\n\t\t\t\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t    \t\t\twrap.style.left = (zahl-100)+'%'\r\n\t\t\t    \t\t})\r\n\t\t\t    \t\tcurrentArt()\r\n\t\t\t    \t}\r\n\t\t\t    }\r\n\r\n\t\t\t    // check buttons\r\n\t\t\t    checkForUnnecessaryArrows()\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\r\n    const arrowcontrols = (bilder) => {\r\n    \tif (bilder.length > 1) {\r\n\r\n\t    \treturn(\r\n\t\t    \t<div className=\"arrowcontrols\" style={style.arrowcontrols}>\r\n\t\t\t\t\t<div className=\"arrow\" onClick={(el) => {arrownavigation(el);currentArt()}}  id=\"rightarrow\" style={style.arrow}>&#x25E8;</div>\r\n\t\t\t\t\t<div className=\"arrow\" onClick={(el) => {arrownavigation(el);currentArt()}} id=\"leftarrow\" style={style.arrow}>&#x25E7;</div>\r\n\t\t\t\t\t<style>\r\n\t\t  \t\t\t\t{`.arrow:hover{opacity:1 !important}#leftarrow{display:none}`}\r\n\t\t\t\t\t</style>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n    } \r\n\r\n\treturn (\r\n\t\t<div className=\"sctn sctn_bilderwand\">\r\n\t\t\t<div className=\"sctn_header\" style={style.header}>\r\n\t\t\t\t<h1 className=\"sctn_heading\" style={style.heading}>{props.titel}</h1>\r\n\t\t\t\t<ZurWand label=\"Anmerkungen\" wandLaden={() => {console.log(`Wand ${props.titel} wird geladen...`)}}>Anmerkungen der Künstlerin</ZurWand>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sctn_body\">\r\n\t\t\t\t{arrowcontrols(bilder)}\r\n\t\t\t\t<div className=\"sctn_wand\" style={style.wand}>\r\n\t\t\t\t\t{bilderHTML}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{SingleArtView && <Einzelbild key={props.id} bildinfos={bilder[selectedArt]} schliessen={()=>{setEinzelAnsicht(false);SingleArtView = false}} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Bilderwand"]},"metadata":{},"sourceType":"module"}