{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilss\\\\Desktop\\\\Projects\\\\galerie-sens\\\\src\\\\pages\\\\bilderwand.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ZurWand from './../components/zurwand';\nimport Einzelbild from './../components/einzelbild'; // hier m√ºssen Bilder geladen werden\n// const bilder = []\n// bilder.map(...) erstelle <BildThumb />\n\nconst Bilderwand = props => {\n  _s();\n\n  const [einzelAnsicht, setEinzelAnsicht] = useState(false);\n  const [selectedArt, setSelectedArt] = useState(0);\n  let SingleArtView = einzelAnsicht; //setEinzelAnsicht(false) infinite loop because component re-renders\n  //alert(props.match.params)\n  // ### click auf Bild -> setEinzelAnsicht! && set Bildinfos\n\n  const style = {\n    header: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      top: 0,\n      height: 64,\n      position: 'fixed',\n      zIndex: 1\n    },\n    heading: {\n      height: 36,\n      zIndex: 2,\n      color: 'lightgrey',\n      pointerEvents: 'none',\n      fontSize: '1.5em'\n    },\n    wand: {\n      background: '#2b2b2b',\n      height: '100vh',\n      width: '100%',\n      position: 'fixed',\n      top: 0,\n      left: 0\n    },\n    arrowcontrols: {\n      position: 'absolute',\n      zIndex: 3,\n      color: 'rgb(240,240,240)',\n      display: 'flex',\n      alignItems: 'center',\n      left: 50,\n      height: '100%',\n      top: 0,\n      width: 'calc(100% - 100px)',\n      justifyContent: 'space-between',\n      fontSize: '2.5em',\n      flexDirection: 'row-reverse',\n      pointerEvents: 'none'\n    },\n    arrow: {\n      opacity: '0.6',\n      transition: 'opacity 0.2s ease',\n      fontWeight: 900,\n      cursor: 'pointer',\n      pointerEvents: 'all'\n    },\n    imagewrapper: {\n      position: 'absolute',\n      top: 0,\n      width: '100vw',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: 'left 1s ease'\n    },\n    image: {\n      cursor: 'pointer',\n      display: 'inline',\n      opacity: 0,\n      animationName: 'fadein',\n      animationDuration: '0.4s',\n      animationDelay: '1s',\n      animationTimingFunction: 'ease',\n      animationFillMode: 'forwards',\n      height: '70%'\n    },\n    bildtitel: {\n      color: 'lightgrey'\n    }\n  }; // clickEvent auf IMG, \n  // dann <p className=\"bild_titel\" style={style.bildtitel}>{props.bilder[0].titel}</p> \n  // unter Einzelbildansicht (EBA)\n\n  const bilder = props.bilder;\n  /*\r\n  \t[i]\r\n  \t\t.titel\r\n  \t\t.beschreibung\r\n  \t\t.preis\r\n  \t\t.tags\r\n  \t\t.groesse.x/.y/.z\r\n  \t\t.gewicht\r\n  \t\t.altSrc // [filename2,filename3]\r\n  \t\t.source\r\n  \t\t.alt#txt\r\n  \t\t.verkauft // true,false\r\n  */\n\n  const diesesKunstwerk = el => {\n    setSelectedArt(el.target.id);\n    setEinzelAnsicht(true);\n  };\n\n  const bilderHTML = bilder.map(bild => {\n    const left = bild.id * 100;\n    const wrapperstyleobj = JSON.stringify(style.imagewrapper);\n    const newwrapperstyle = JSON.parse(wrapperstyleobj);\n    newwrapperstyle.left = left + '%';\n    const imgstyleobj = JSON.stringify(style.image);\n    const newimgstyle = JSON.parse(imgstyleobj);\n\n    if (bild.schatten) {\n      newimgstyle.WebkitBoxShadow = '0px 0px 52px 0px rgba(0, 0, 0, 1)';\n      newimgstyle.MozBoxShadow = '0px 0px 52px 0px rgba(0, 0, 0, 1)';\n      newimgstyle.boxShadow = '0 0 10px rgba(0,0,0,1),0 0 30px rgba(0,0,0,0.85),0 0 40px rgba(0,0,0,0.45),0 0 50px rgba(0,0,0,0.3),0 0 60px rgba(0,0,0,0.25)';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: bild.id,\n      className: \"bilderwrapper\",\n      style: newwrapperstyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: bild.id,\n      className: \"wandbild\",\n      style: newimgstyle,\n      alt: bilder[bild.id].altTxt,\n      src: bilder[bild.id].source,\n      onClick: el => {\n        diesesKunstwerk(el);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 86\n      }\n    }));\n  });\n\n  const getZahl = obj => {\n    // get css value str:\n    const origLeft = obj.style.left; // cut off '%':\n\n    const nurZahl = origLeft.substring(0, origLeft.length - 1);\n    return parseInt(nurZahl); // return nurZahl\n  };\n\n  const bilderwrap = document.getElementsByClassName('bilderwrapper'); // getElementsByClassName returns HTMLCollection not nodelist! Deswegen muss man dort ein bisschen nachhelfen:\n\n  HTMLCollection.prototype.forEach = Array.prototype.forEach;\n\n  const checkForUnnecessaryArrows = () => {\n    const larrw = document.getElementById('leftarrow');\n    const rarrw = document.getElementById('rightarrow');\n\n    if (bilderwrap[0].style.left === '0%') {\n      larrw.style.display = 'none';\n    } else {\n      larrw.style.display = 'block';\n    }\n\n    if (bilderwrap[bilderwrap.length - 1].style.left === '0%') {\n      rarrw.style.display = 'none';\n    } else {\n      rarrw.style.display = 'block';\n    }\n  };\n\n  document.addEventListener('keydown', function (evt) {\n    evt.stopImmediatePropagation();\n\n    if (document.querySelector('.bilderwrapper') !== null) {\n      evt = evt || window.event;\n\n      if (bilderwrap.length > 1) {\n        if (evt.keyCode === 37) {\n          if (bilderwrap[0].style.left !== '0%') {\n            bilderwrap.forEach(wrap => {\n              const zahl = getZahl(wrap);\n              wrap.style.left = zahl + 100 + '%';\n            });\n          }\n        } else if (evt.keyCode === 39) {\n          if (bilderwrap[bilderwrap.length - 1].style.left !== '0%') {\n            bilderwrap.forEach(wrap => {\n              const zahl = getZahl(wrap);\n              wrap.style.left = zahl - 100 + '%';\n            });\n          }\n        } // check buttons\n\n\n        checkForUnnecessaryArrows();\n      }\n    }\n  });\n\n  const arrowcontrols = bilder => {\n    if (bilder.length > 1) {\n      const arrownavigation = e => {\n        if (e.currentTarget.id === \"leftarrow\") {\n          bilderwrap.forEach(wrap => {\n            const zahl = getZahl(wrap);\n            wrap.style.left = zahl + 100 + '%';\n          });\n        } else {\n          bilderwrap.forEach(wrap => {\n            const zahl = getZahl(wrap);\n            wrap.style.left = zahl - 100 + '%';\n          });\n        }\n\n        checkForUnnecessaryArrows();\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrowcontrols\",\n        style: style.arrowcontrols,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow\",\n        onClick: el => {\n          arrownavigation(el);\n        },\n        id: \"rightarrow\",\n        style: style.arrow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 6\n        }\n      }, \"\\u25E8\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow\",\n        onClick: el => {\n          arrownavigation(el);\n        },\n        id: \"leftarrow\",\n        style: style.arrow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 6\n        }\n      }, \"\\u25E7\"), /*#__PURE__*/React.createElement(\"style\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 6\n        }\n      }, `.arrow:hover{opacity:1 !important}#leftarrow{display:none}`));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn sctn_bilderwand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_header\",\n    style: style.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sctn_heading\",\n    style: style.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }\n  }, props.titel), /*#__PURE__*/React.createElement(ZurWand, {\n    label: \"Anmerkungen\",\n    wandLaden: () => {\n      console.log(`Wand ${props.titel} wird geladen...`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, \"Anmerkungen der K\\xFCnstlerin\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 4\n    }\n  }, arrowcontrols(bilder), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sctn_wand\",\n    style: style.wand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, bilderHTML)), einzelAnsicht && /*#__PURE__*/React.createElement(Einzelbild, {\n    bildinfos: bilder[selectedArt],\n    schliessen: () => {\n      setEinzelAnsicht(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 22\n    }\n  }));\n};\n\n_s(Bilderwand, \"MzSSjMn0kSVZXmeom/Lj1oESJnk=\");\n\n_c = Bilderwand;\nexport default Bilderwand;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bilderwand\");","map":{"version":3,"sources":["C:/Users/nilss/Desktop/Projects/galerie-sens/src/pages/bilderwand.js"],"names":["React","useState","ZurWand","Einzelbild","Bilderwand","props","einzelAnsicht","setEinzelAnsicht","selectedArt","setSelectedArt","SingleArtView","style","header","display","flexDirection","alignItems","justifyContent","top","height","position","zIndex","heading","color","pointerEvents","fontSize","wand","background","width","left","arrowcontrols","arrow","opacity","transition","fontWeight","cursor","imagewrapper","image","animationName","animationDuration","animationDelay","animationTimingFunction","animationFillMode","bildtitel","bilder","diesesKunstwerk","el","target","id","bilderHTML","map","bild","wrapperstyleobj","JSON","stringify","newwrapperstyle","parse","imgstyleobj","newimgstyle","schatten","WebkitBoxShadow","MozBoxShadow","boxShadow","altTxt","source","getZahl","obj","origLeft","nurZahl","substring","length","parseInt","bilderwrap","document","getElementsByClassName","HTMLCollection","prototype","forEach","Array","checkForUnnecessaryArrows","larrw","getElementById","rarrw","addEventListener","evt","stopImmediatePropagation","querySelector","window","event","keyCode","wrap","zahl","arrownavigation","e","currentTarget","titel","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ZurWand from './../components/zurwand'\r\nimport Einzelbild from './../components/einzelbild'\r\n\r\n// hier m√ºssen Bilder geladen werden\r\n// const bilder = []\r\n// bilder.map(...) erstelle <BildThumb />\r\n\r\n\r\nconst Bilderwand = props => {\r\n\r\n\tconst [einzelAnsicht, setEinzelAnsicht] = useState(false)\r\n\tconst [selectedArt, setSelectedArt] = useState(0)\r\n\r\n\tlet SingleArtView = einzelAnsicht\r\n\r\n\t//setEinzelAnsicht(false) infinite loop because component re-renders\r\n\r\n\t//alert(props.match.params)\r\n\r\n\t// ### click auf Bild -> setEinzelAnsicht! && set Bildinfos\r\n\r\n\tconst style = {\r\n\t\theader:{\r\n\t\t\tdisplay:'flex',\r\n\t\t\tflexDirection: 'row',\r\n    \t\talignItems: 'center',\r\n    \t\tjustifyContent: 'space-between',\r\n    \t\ttop: 0,\r\n    \t\theight: 64,\r\n    \t\tposition: 'fixed',\r\n    \t\tzIndex: 1\r\n\t\t},\r\n\t\theading: {\r\n\t\t\theight: 36,\r\n\t\t\tzIndex:2,\r\n\t\t\tcolor:'lightgrey',\r\n\t\t\tpointerEvents: 'none',\r\n\t\t\tfontSize:'1.5em'\r\n\t\t},\r\n\t\twand:{\r\n\t\t\tbackground:'#2b2b2b',\r\n\t\t\theight:'100vh',\r\n\t\t\twidth:'100%',\r\n\t\t\tposition: 'fixed',\r\n\t\t    top: 0,\r\n\t\t    left: 0\r\n\t\t},\r\n\t\tarrowcontrols:{\r\n\t\t\tposition:'absolute',\r\n\t\t\tzIndex:3,\r\n\t\t\tcolor:'rgb(240,240,240)',\r\n\t\t\tdisplay:'flex',\r\n\t\t\talignItems:'center',\r\n\t\t\tleft:50,\r\n\t\t\theight:'100%',\r\n\t\t\ttop:0,\r\n\t\t\twidth:'calc(100% - 100px)',\r\n\t\t\tjustifyContent:'space-between',\r\n\t\t\tfontSize:'2.5em',\r\n\t\t\tflexDirection:'row-reverse',\r\n\t\t\tpointerEvents:'none'\r\n\t\t},\r\n\t\tarrow:{\r\n\t\t\topacity:'0.6',\r\n\t\t\ttransition:'opacity 0.2s ease',\r\n\t\t\tfontWeight:900,\r\n\t\t\tcursor:'pointer',\r\n\t\t\tpointerEvents:'all'\r\n\t\t},\r\n\t\timagewrapper:{\r\n\t\t\tposition:'absolute',\r\n\t\t\ttop:0,\r\n\t\t\twidth:'100vw',\r\n\t\t\theight:'100%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t    flexDirection: 'row',\r\n\t\t    alignItems: 'center',\r\n\t\t    justifyContent: 'center',\r\n\t\t    transition: 'left 1s ease'\r\n\t\t},\r\n\t\timage:{\r\n\t\t\tcursor:'pointer',\r\n\t\t\tdisplay:'inline',\r\n\t\t\topacity:0,\r\n\t\t\tanimationName:'fadein',\r\n\t\t\tanimationDuration:'0.4s',\r\n\t\t\tanimationDelay:'1s',\r\n\t\t\tanimationTimingFunction: 'ease',\r\n\t\t\tanimationFillMode: 'forwards',\r\n\t\t\theight:'70%'\r\n\t\t},\r\n\t\tbildtitel:{\r\n\t\t\tcolor: 'lightgrey'\r\n\t\t}\r\n\t}\r\n\r\n\t// clickEvent auf IMG, \r\n\t// dann <p className=\"bild_titel\" style={style.bildtitel}>{props.bilder[0].titel}</p> \r\n\t// unter Einzelbildansicht (EBA)\r\n\r\n\tconst bilder = props.bilder\r\n\t/*\r\n\t\t[i]\r\n\t\t\t.titel\r\n\t\t\t.beschreibung\r\n\t\t\t.preis\r\n\t\t\t.tags\r\n\t\t\t.groesse.x/.y/.z\r\n\t\t\t.gewicht\r\n\t\t\t.altSrc // [filename2,filename3]\r\n\t\t\t.source\r\n\t\t\t.alt#txt\r\n\t\t\t.verkauft // true,false\r\n\t*/\r\n\r\n\tconst diesesKunstwerk = (el) => {\r\n\t\tsetSelectedArt(el.target.id)\r\n\t\tsetEinzelAnsicht(true)\r\n\t}\r\n\r\n\tconst bilderHTML = bilder.map((bild) => {\r\n\t\tconst left = bild.id*100\r\n\r\n\t\tconst wrapperstyleobj = JSON.stringify(style.imagewrapper)\r\n\t\tconst newwrapperstyle = JSON.parse(wrapperstyleobj)\r\n\t\tnewwrapperstyle.left=left+'%'\r\n\r\n\t\tconst imgstyleobj = JSON.stringify(style.image)\r\n\t\tconst newimgstyle = JSON.parse(imgstyleobj)\r\n\t\tif (bild.schatten) {\r\n\t\t\tnewimgstyle.WebkitBoxShadow='0px 0px 52px 0px rgba(0, 0, 0, 1)'\r\n\t\t\tnewimgstyle.MozBoxShadow   ='0px 0px 52px 0px rgba(0, 0, 0, 1)'\r\n\t\t\tnewimgstyle.boxShadow      ='0 0 10px rgba(0,0,0,1),0 0 30px rgba(0,0,0,0.85),0 0 40px rgba(0,0,0,0.45),0 0 50px rgba(0,0,0,0.3),0 0 60px rgba(0,0,0,0.25)'\r\n\t\t}\r\n\r\n        return (<div key={bild.id} className=\"bilderwrapper\" style={newwrapperstyle}><img id={bild.id} className=\"wandbild\" style={newimgstyle} alt={bilder[bild.id].altTxt} src={bilder[bild.id].source} onClick={(el)=>{diesesKunstwerk(el)}}/></div>)\r\n    })\r\n\r\n\tconst getZahl = (obj) => {\r\n\t\t// get css value str:\r\n\t\tconst origLeft = obj.style.left\r\n\t\t// cut off '%':\r\n\t\tconst nurZahl = origLeft.substring(0,origLeft.length-1)\t\r\n\t\treturn(parseInt(nurZahl))\r\n\t\t// return nurZahl\r\n\t}\r\n\r\n\tconst bilderwrap = document.getElementsByClassName('bilderwrapper')\r\n\t// getElementsByClassName returns HTMLCollection not nodelist! Deswegen muss man dort ein bisschen nachhelfen:\r\n\tHTMLCollection.prototype.forEach = Array.prototype.forEach\r\n\r\n\tconst checkForUnnecessaryArrows = () => {\r\n\r\n\t\tconst larrw = document.getElementById('leftarrow')\r\n\t\tconst rarrw = document.getElementById('rightarrow')\r\n\r\n\t\tif (bilderwrap[0].style.left === '0%') {\r\n\t\t\tlarrw.style.display = 'none'\r\n\t\t} else {\r\n\t\t\tlarrw.style.display = 'block'\r\n\t\t}\r\n\t\tif (bilderwrap[bilderwrap.length-1].style.left === '0%') {\r\n\t\t\trarrw.style.display = 'none'\r\n\t\t} else {\r\n\t\t\trarrw.style.display = 'block'\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tdocument.addEventListener('keydown',function(evt){\r\n\t\tevt.stopImmediatePropagation()\r\n\t\tif(document.querySelector('.bilderwrapper') !== null) {\r\n\t\t\tevt = evt || window.event\r\n\t\t\tif (bilderwrap.length > 1) {\r\n\r\n\t\t\t\tif (evt.keyCode === 37) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (bilderwrap[0].style.left !== '0%') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbilderwrap.forEach((wrap) => {\r\n\r\n\t\t\t\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t\t\t\t\twrap.style.left = (zahl+100)+'%'\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\telse if (evt.keyCode === 39) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (bilderwrap[bilderwrap.length-1].style.left !== '0%') {\r\n\t\t\t    \t\t\r\n\t\t\t    \t\tbilderwrap.forEach((wrap) => {\r\n\r\n\t\t\t\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t    \t\t\twrap.style.left = (zahl-100)+'%'\r\n\t\t\t    \t\t})\r\n\r\n\t\t\t    \t}\r\n\t\t\t    }\r\n\r\n\t\t\t    // check buttons\r\n\t\t\t    checkForUnnecessaryArrows()\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\r\n    const arrowcontrols = (bilder) => {\r\n    \tif (bilder.length > 1) {\r\n\r\n\t\t\tconst arrownavigation = (e) => {\r\n\t\t\t\t\r\n\t\t\t\tif (e.currentTarget.id === \"leftarrow\") {\r\n\t\t\t\t\tbilderwrap.forEach((wrap) => {\r\n\t\t\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t\t\t\twrap.style.left = (zahl+100)+'%'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbilderwrap.forEach((wrap) => {\r\n\t\t\t\t\t\tconst zahl = getZahl(wrap)\r\n\t\t\t\t\t\twrap.style.left = (zahl-100)+'%'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheckForUnnecessaryArrows()\r\n\t\t\t}\r\n\t    \treturn(\r\n\t\t    \t<div className=\"arrowcontrols\" style={style.arrowcontrols}>\r\n\t\t\t\t\t<div className=\"arrow\" onClick={(el) => {arrownavigation(el)}}  id=\"rightarrow\" style={style.arrow}>&#x25E8;</div>\r\n\t\t\t\t\t<div className=\"arrow\" onClick={(el) => {arrownavigation(el)}} id=\"leftarrow\" style={style.arrow}>&#x25E7;</div>\r\n\t\t\t\t\t<style>\r\n\t\t  \t\t\t\t{`.arrow:hover{opacity:1 !important}#leftarrow{display:none}`}\r\n\t\t\t\t\t</style>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n    } \r\n\r\n\treturn (\r\n\t\t<div className=\"sctn sctn_bilderwand\">\r\n\t\t\t<div className=\"sctn_header\" style={style.header}>\r\n\t\t\t\t<h1 className=\"sctn_heading\" style={style.heading}>{props.titel}</h1>\r\n\t\t\t\t<ZurWand label=\"Anmerkungen\" wandLaden={() => {console.log(`Wand ${props.titel} wird geladen...`)}}>Anmerkungen der K√ºnstlerin</ZurWand>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sctn_body\">\r\n\t\t\t\t{arrowcontrols(bilder)}\r\n\t\t\t\t<div className=\"sctn_wand\" style={style.wand}>\r\n\t\t\t\t\t{bilderHTML}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{einzelAnsicht && <Einzelbild bildinfos={bilder[selectedArt]} schliessen={()=>{setEinzelAnsicht(false)}} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Bilderwand"]},"metadata":{},"sourceType":"module"}