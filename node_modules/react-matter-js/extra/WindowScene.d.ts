/// <reference path="../util/trackCats.d.ts" />
/// <reference path="../util/useClones.d.ts" />
/// <reference path="../bodies/Body.d.ts" />
/// <reference types="matter-js" />
import React from 'react';
declare const WindowScene: (props: Pick<React.PropsWithChildren<{
    width?: number | undefined;
    height?: number | undefined;
    pixelRatio?: number | "auto" | undefined;
    engineOptions?: import("matter-js").IEngineDefinition | undefined;
    rendererProps?: (Pick<React.PropsWithChildren<{
        options: import("matter-js").IRendererOptions;
        enableMouse?: boolean | undefined;
        mouseConstraintOptions?: import("matter-js").IMouseConstraintDefinition | undefined;
        children?: React.ReactNode;
    }> | ({
        options: import("matter-js").IRendererOptions;
        enableMouse?: boolean | undefined;
        mouseConstraintOptions?: import("matter-js").IMouseConstraintDefinition | undefined;
        children?: React.ReactNode;
    } & React.RefAttributes<React.Component<{
        options: import("matter-js").IRendererOptions;
        enableMouse?: boolean | undefined;
        mouseConstraintOptions?: import("matter-js").IMouseConstraintDefinition | undefined;
        children?: React.ReactNode;
    }, any, any>>), "enableMouse" | "mouseConstraintOptions" | "children"> & {
        options?: import("matter-js").IRendererOptions | undefined;
    }) | undefined;
    mouse?: boolean | undefined;
    gravity?: {
        x?: number | undefined;
        y?: number | undefined;
        scale?: number | undefined;
    } | undefined;
    walled?: boolean | undefined;
    wallWidth?: number | undefined;
    children: React.ReactNode;
}> | ({
    width?: number | undefined;
    height?: number | undefined;
    pixelRatio?: number | "auto" | undefined;
    engineOptions?: import("matter-js").IEngineDefinition | undefined;
    rendererProps?: (Pick<React.PropsWithChildren<{
        options: import("matter-js").IRendererOptions;
        enableMouse?: boolean | undefined;
        mouseConstraintOptions?: import("matter-js").IMouseConstraintDefinition | undefined;
        children?: React.ReactNode;
    }> | ({
        options: import("matter-js").IRendererOptions;
        enableMouse?: boolean | undefined;
        mouseConstraintOptions?: import("matter-js").IMouseConstraintDefinition | undefined;
        children?: React.ReactNode;
    } & React.RefAttributes<React.Component<{
        options: import("matter-js").IRendererOptions;
        enableMouse?: boolean | undefined;
        mouseConstraintOptions?: import("matter-js").IMouseConstraintDefinition | undefined;
        children?: React.ReactNode;
    }, any, any>>), "enableMouse" | "mouseConstraintOptions" | "children"> & {
        options?: import("matter-js").IRendererOptions | undefined;
    }) | undefined;
    mouse?: boolean | undefined;
    gravity?: {
        x?: number | undefined;
        y?: number | undefined;
        scale?: number | undefined;
    } | undefined;
    walled?: boolean | undefined;
    wallWidth?: number | undefined;
    children: React.ReactNode;
} & React.RefAttributes<React.Component<{
    width?: number | undefined;
    height?: number | undefined;
    pixelRatio?: number | "auto" | undefined;
    engineOptions?: import("matter-js").IEngineDefinition | undefined;
    rendererProps?: (Pick<React.PropsWithChildren<{
        options: import("matter-js").IRendererOptions;
        enableMouse?: boolean | undefined;
        mouseConstraintOptions?: import("matter-js").IMouseConstraintDefinition | undefined;
        children?: React.ReactNode;
    }> | ({
        options: import("matter-js").IRendererOptions;
        enableMouse?: boolean | undefined;
        mouseConstraintOptions?: import("matter-js").IMouseConstraintDefinition | undefined;
        children?: React.ReactNode;
    } & React.RefAttributes<React.Component<{
        options: import("matter-js").IRendererOptions;
        enableMouse?: boolean | undefined;
        mouseConstraintOptions?: import("matter-js").IMouseConstraintDefinition | undefined;
        children?: React.ReactNode;
    }, any, any>>), "enableMouse" | "mouseConstraintOptions" | "children"> & {
        options?: import("matter-js").IRendererOptions | undefined;
    }) | undefined;
    mouse?: boolean | undefined;
    gravity?: {
        x?: number | undefined;
        y?: number | undefined;
        scale?: number | undefined;
    } | undefined;
    walled?: boolean | undefined;
    wallWidth?: number | undefined;
    children: React.ReactNode;
}, any, any>>), "pixelRatio" | "engineOptions" | "rendererProps" | "children" | "mouse" | "gravity" | "walled" | "wallWidth">) => JSX.Element;
export default WindowScene;
